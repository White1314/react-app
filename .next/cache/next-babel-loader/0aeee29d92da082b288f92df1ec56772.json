{"ast":null,"code":"var axios = require('axios');\n\nvar _require = require('../config'),\n    REPOSITY_URL = _require.REPOSITY_URL,\n    USER_REPOSITY_URL = _require.USER_REPOSITY_URL;\n\nvar getApiData = function getApiData(ctx, path) {\n  var url = ''; // 根据客户端请求的 path 匹配对应的 github api url\n\n  switch (path) {\n    case '/api/repository':\n      url = REPOSITY_URL;\n\n    case '/api/user/repos':\n      url = USER_REPOSITY_URL;\n\n    default:\n      break;\n  } // 获取 session 里的 token\n\n\n  var oauth = ctx.req.session.oauth;\n\n  var _ref = oauth ? oauth : {},\n      token_type = _ref.token_type,\n      access_token = _ref.access_token;\n\n  var headers = oauth ? {\n    Authorization: \"\".concat(token_type, \" \").concat(access_token)\n  } : {};\n  return axios({\n    url: url,\n    method: 'get',\n    headers: headers\n  })[\"catch\"](function (err) {});\n};\n\nmodule.exports = {\n  getApiData: getApiData\n};","map":{"version":3,"sources":["D:/360Downloads/Vscode/program/Next-Github-App/server/utils.js"],"names":["axios","require","REPOSITY_URL","USER_REPOSITY_URL","getApiData","ctx","path","url","oauth","req","session","token_type","access_token","headers","Authorization","method","err","module","exports"],"mappings":"AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;eAC4CA,OAAO,CAAC,WAAD,C;IAA3CC,Y,YAAAA,Y;IAAcC,iB,YAAAA,iB;;AAEtB,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAMC,IAAN,EAAe;AAChC,MAAIC,GAAG,GAAG,EAAV,CADgC,CAEhC;;AACA,UAAQD,IAAR;AACE,SAAK,iBAAL;AACEC,MAAAA,GAAG,GAAGL,YAAN;;AACF,SAAK,iBAAL;AACEK,MAAAA,GAAG,GAAGJ,iBAAN;;AACF;AACE;AANJ,GAHgC,CAWhC;;;AAXgC,MAYxBK,KAZwB,GAYdH,GAAG,CAACI,GAAJ,CAAQC,OAZM,CAYxBF,KAZwB;;AAAA,aAaKA,KAAK,GAAGA,KAAH,GAAW,EAbrB;AAAA,MAaxBG,UAbwB,QAaxBA,UAbwB;AAAA,MAaZC,YAbY,QAaZA,YAbY;;AAchC,MAAMC,OAAO,GAAGL,KAAK,GACjB;AACEM,IAAAA,aAAa,YAAKH,UAAL,cAAmBC,YAAnB;AADf,GADiB,GAIjB,EAJJ;AAKA,SAAOZ,KAAK,CAAC;AACXO,IAAAA,GAAG,EAAHA,GADW;AAEXQ,IAAAA,MAAM,EAAE,KAFG;AAGXF,IAAAA,OAAO,EAAPA;AAHW,GAAD,CAAL,UAIE,UAACG,GAAD,EAAS,CAAE,CAJb,CAAP;AAKD,CAxBD;;AA0BAC,MAAM,CAACC,OAAP,GAAiB;AACfd,EAAAA,UAAU,EAAVA;AADe,CAAjB","sourcesContent":["const axios = require('axios');\r\nconst { REPOSITY_URL, USER_REPOSITY_URL } = require('../config');\r\n\r\nconst getApiData = (ctx, path) => {\r\n  let url = '';\r\n  // 根据客户端请求的 path 匹配对应的 github api url\r\n  switch (path) {\r\n    case '/api/repository':\r\n      url = REPOSITY_URL;\r\n    case '/api/user/repos':\r\n      url = USER_REPOSITY_URL;\r\n    default:\r\n      break;\r\n  }\r\n  // 获取 session 里的 token\r\n  const { oauth } = ctx.req.session;\r\n  const { token_type, access_token } = oauth ? oauth : {};\r\n  const headers = oauth\r\n    ? {\r\n        Authorization: `${token_type} ${access_token}`,\r\n      }\r\n    : {};\r\n  return axios({\r\n    url,\r\n    method: 'get',\r\n    headers,\r\n  }).catch((err) => {});\r\n};\r\n\r\nmodule.exports = {\r\n  getApiData,\r\n};\r\n"]},"metadata":{},"sourceType":"script"}