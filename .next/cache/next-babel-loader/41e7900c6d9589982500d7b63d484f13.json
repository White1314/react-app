{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nvar LANGUAGES = ['JavaScript', 'HTML', 'CSS', 'TypeScript', 'Java', 'Rust'];\nvar SORT_TYPES = [{\n  name: 'Best Match'\n}, {\n  name: 'Most Stars',\n  value: 'stars',\n  order: 'dsc'\n}, {\n  name: 'Fewest Stars',\n  value: 'stars',\n  order: 'asc'\n}, {\n  name: 'Most Forks',\n  value: 'forks',\n  order: 'dsc'\n}, {\n  name: 'Fewest Forks',\n  value: 'forks',\n  order: 'asc'\n}];\n\nvar Search = function Search(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", null, \"search\"));\n};\n\nSearch.getInitialProps = function _callee(_ref2) {\n  var ctx, _ctx$query, name, sort, lang, order, page;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          ctx = _ref2.ctx;\n          _ctx$query = ctx.query, name = _ctx$query.name, sort = _ctx$query.sort, lang = _ctx$query.lang, order = _ctx$query.order, page = _ctx$query.page; // `https://api.github.com/search/repositories?q=${name}`\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default withRouter(Search);","map":{"version":3,"sources":["D:/360Downloads/Vscode/program/Next-Github-App/pages/search.tsx"],"names":["withRouter","LANGUAGES","SORT_TYPES","name","value","order","Search","getInitialProps","ctx","query","sort","lang","page"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AAGA,IAAMC,SAAS,GAAG,CAAC,YAAD,EAAe,MAAf,EAAuB,KAAvB,EAA8B,YAA9B,EAA4C,MAA5C,EAAoD,MAApD,CAAlB;AACA,IAAMC,UAAU,GAAG,CACjB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CADiB,EAEjB;AAAEA,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE,OAA7B;AAAsCC,EAAAA,KAAK,EAAE;AAA7C,CAFiB,EAGjB;AAAEF,EAAAA,IAAI,EAAE,cAAR;AAAwBC,EAAAA,KAAK,EAAE,OAA/B;AAAwCC,EAAAA,KAAK,EAAE;AAA/C,CAHiB,EAIjB;AAAEF,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE,OAA7B;AAAsCC,EAAAA,KAAK,EAAE;AAA7C,CAJiB,EAKjB;AAAEF,EAAAA,IAAI,EAAE,cAAR;AAAwBC,EAAAA,KAAK,EAAE,OAA/B;AAAwCC,EAAAA,KAAK,EAAE;AAA/C,CALiB,CAAnB;;AAQA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAQ;AAAA;;AACrB,SACE,4BACE,4BADF,CADF;AAKD,CAND;;AAQAA,MAAM,CAACC,eAAP,GAAyB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,SAASA,GAAT;AAAA,uBACmBA,GAAG,CAACC,KADvB,EACfN,IADe,cACfA,IADe,EACTO,IADS,cACTA,IADS,EACHC,IADG,cACHA,IADG,EACGN,KADH,cACGA,KADH,EACUO,IADV,cACUA,IADV,EAEvB;;AAFuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAKA,eAAeZ,UAAU,CAACM,MAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router';\r\nimport { Row, List } from 'antd';\r\n\r\nconst LANGUAGES = ['JavaScript', 'HTML', 'CSS', 'TypeScript', 'Java', 'Rust'];\r\nconst SORT_TYPES = [\r\n  { name: 'Best Match' },\r\n  { name: 'Most Stars', value: 'stars', order: 'dsc' },\r\n  { name: 'Fewest Stars', value: 'stars', order: 'asc' },\r\n  { name: 'Most Forks', value: 'forks', order: 'dsc' },\r\n  { name: 'Fewest Forks', value: 'forks', order: 'asc' },\r\n];\r\n\r\nconst Search = ({}) => {\r\n  return (\r\n    <>\r\n      <div>search</div>\r\n    </>\r\n  );\r\n};\r\n\r\nSearch.getInitialProps = async ({ ctx }) => {\r\n  const { name, sort, lang, order, page } = ctx.query;\r\n  // `https://api.github.com/search/repositories?q=${name}`\r\n};\r\n\r\nexport default withRouter(Search);\r\n"]},"metadata":{},"sourceType":"module"}