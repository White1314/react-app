{"ast":null,"code":"const axios = require('axios');\n\nconst {\n  REPOSITY_URL,\n  USER_REPOSITY_URL\n} = require('../config');\n\nconst getApiData = async (ctx, path) => {\n  let url = ''; // 根据客户端请求的 path 匹配对应的 github api url\n\n  switch (path) {\n    case '/api/repository':\n      url = REPOSITY_URL;\n\n    case '/api/user/repos':\n      url = USER_REPOSITY_URL;\n\n    default:\n      break;\n  } // 获取 session 里的 token\n\n\n  const {\n    oauth\n  } = ctx.req.session;\n  const {\n    token_type,\n    access_token\n  } = oauth ? oauth : {};\n  const headers = oauth ? {\n    Authorization: `${token_type} ${access_token}`\n  } : {};\n  let result = await axios({\n    url,\n    method: 'get',\n    headers\n  }).catch(err => {});\n  result = result.status === 200 ? result.data : {};\n  return result;\n};\n\nmodule.exports = {\n  getApiData\n};","map":{"version":3,"sources":["D:/360Downloads/Vscode/program/Next-Github-App/server/utils.js"],"names":["axios","require","REPOSITY_URL","USER_REPOSITY_URL","getApiData","ctx","path","url","oauth","req","session","token_type","access_token","headers","Authorization","result","method","catch","err","status","data","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAM;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,IAAsCF,OAAO,CAAC,WAAD,CAAnD;;AAEA,MAAMG,UAAU,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AACtC,MAAIC,GAAG,GAAG,EAAV,CADsC,CAEtC;;AACA,UAAQD,IAAR;AACE,SAAK,iBAAL;AACEC,MAAAA,GAAG,GAAGL,YAAN;;AACF,SAAK,iBAAL;AACEK,MAAAA,GAAG,GAAGJ,iBAAN;;AACF;AACE;AANJ,GAHsC,CAWtC;;;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAYH,GAAG,CAACI,GAAJ,CAAQC,OAA1B;AACA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA+BJ,KAAK,GAAGA,KAAH,GAAW,EAArD;AACA,QAAMK,OAAO,GAAGL,KAAK,GACjB;AACEM,IAAAA,aAAa,EAAG,GAAEH,UAAW,IAAGC,YAAa;AAD/C,GADiB,GAIjB,EAJJ;AAKA,MAAIG,MAAM,GAAG,MAAMf,KAAK,CAAC;AACvBO,IAAAA,GADuB;AAEvBS,IAAAA,MAAM,EAAE,KAFe;AAGvBH,IAAAA;AAHuB,GAAD,CAAL,CAIhBI,KAJgB,CAITC,GAAD,IAAS,CAAE,CAJD,CAAnB;AAKAH,EAAAA,MAAM,GAAGA,MAAM,CAACI,MAAP,KAAkB,GAAlB,GAAwBJ,MAAM,CAACK,IAA/B,GAAsC,EAA/C;AACA,SAAOL,MAAP;AACD,CA1BD;;AA4BAM,MAAM,CAACC,OAAP,GAAiB;AACflB,EAAAA;AADe,CAAjB","sourcesContent":["const axios = require('axios');\r\nconst { REPOSITY_URL, USER_REPOSITY_URL } = require('../config');\r\n\r\nconst getApiData = async (ctx, path) => {\r\n  let url = '';\r\n  // 根据客户端请求的 path 匹配对应的 github api url\r\n  switch (path) {\r\n    case '/api/repository':\r\n      url = REPOSITY_URL;\r\n    case '/api/user/repos':\r\n      url = USER_REPOSITY_URL;\r\n    default:\r\n      break;\r\n  }\r\n  // 获取 session 里的 token\r\n  const { oauth } = ctx.req.session;\r\n  const { token_type, access_token } = oauth ? oauth : {};\r\n  const headers = oauth\r\n    ? {\r\n        Authorization: `${token_type} ${access_token}`,\r\n      }\r\n    : {};\r\n  let result = await axios({\r\n    url,\r\n    method: 'get',\r\n    headers,\r\n  }).catch((err) => {});\r\n  result = result.status === 200 ? result.data : {};\r\n  return result;\r\n};\r\n\r\nmodule.exports = {\r\n  getApiData,\r\n};\r\n"]},"metadata":{},"sourceType":"script"}