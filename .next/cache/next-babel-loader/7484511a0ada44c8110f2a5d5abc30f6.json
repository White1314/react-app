{"ast":null,"code":"import _message from \"antd/lib/message\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport { Router } from 'next/router';\nimport 'antd/dist/antd.css';\nimport LayOut from '../components/LayOut';\nimport initStore from '../reducers';\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"startLoading\", () => {\n      _message.loading('');\n    });\n\n    _defineProperty(this, \"stopLoading\", () => {\n      _message.destroy();\n    });\n  }\n\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    // 全局获取session里的用户数据\n\n    /*\r\n    let { store } = ctx;\r\n    let session = ctx.req.session;\r\n    let userInfo = session ? session.userInfo : {};\r\n    if (!store.getState().user.id) {\r\n      store.dispatch(actions.getUserInfo(userInfo));\r\n    }\r\n    */\n    let pageProps = Component.getInitialProps ? await Component.getInitialProps({\n      ctx\n    }) : {};\n    return {\n      pageProps\n    };\n  } // 页面切换进行Loading加载\n\n\n  componentDidMount() {\n    Router.events.on('routeChangeStart', this.startLoading);\n    Router.events.on('routeChangeComplete', this.stopLoading);\n    Router.events.on('routeChangeError', this.stopLoading);\n  }\n\n  componentWillUnmount() {\n    Router.events.off('routeChangeStart', this.startLoading);\n    Router.events.off('routeChangeComplete', this.stopLoading);\n    Router.events.off('routeChangeError', this.stopLoading);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store\n    }, __jsx(LayOut, null, __jsx(Component, pageProps)));\n  }\n\n}\n\nexport default withRedux(initStore)(MyApp);","map":{"version":3,"sources":["D:/360Downloads/Vscode/program/Next-Github-App/pages/_app.tsx"],"names":["App","Provider","withRedux","Router","LayOut","initStore","MyApp","loading","destroy","getInitialProps","Component","ctx","pageProps","componentDidMount","events","on","startLoading","stopLoading","componentWillUnmount","off","render","store","props"],"mappings":";;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAQA,MAAMC,KAAN,SAAoBN,GAApB,CAA2B;AAAA;AAAA;;AAAA,0CAoBV,MAAM;AACnB,eAAQO,OAAR,CAAgB,EAAhB;AACD,KAtBwB;;AAAA,yCAwBX,MAAM;AAClB,eAAQC,OAAR;AACD,KA1BwB;AAAA;;AACzB,eAAaC,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C;;AACA;;;;;;;;AAQA,QAAIC,SAAS,GAAGF,SAAS,CAACD,eAAV,GACZ,MAAMC,SAAS,CAACD,eAAV,CAA0B;AAAEE,MAAAA;AAAF,KAA1B,CADM,GAEZ,EAFJ;AAGA,WAAO;AACLC,MAAAA;AADK,KAAP;AAGD,GAjBwB,CAmBzB;;;AASAC,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,MAAM,CAACW,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKC,YAA1C;AACAb,IAAAA,MAAM,CAACW,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,KAAKE,WAA7C;AACAd,IAAAA,MAAM,CAACW,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKE,WAA1C;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBf,IAAAA,MAAM,CAACW,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsC,KAAKH,YAA3C;AACAb,IAAAA,MAAM,CAACW,MAAP,CAAcK,GAAd,CAAkB,qBAAlB,EAAyC,KAAKF,WAA9C;AACAd,IAAAA,MAAM,CAACW,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsC,KAAKF,WAA3C;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBS,MAAAA;AAAxB,QAAkC,KAAKC,KAA7C;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED;AAAjB,OACE,MAAC,MAAD,QACE,MAAC,SAAD,EAAeT,SAAf,CADF,CADF,CADF;AAOD;;AAjDwB;;AAoD3B,eAAeV,SAAS,CAACG,SAAD,CAAT,CAAqBC,KAArB,CAAf","sourcesContent":["import App from 'next/app';\r\nimport { Provider } from 'react-redux';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport { Router } from 'next/router';\r\nimport { message } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport LayOut from '../components/LayOut';\r\nimport initStore from '../reducers';\r\nimport * as actions from '../actions';\r\n\r\ninterface P {\r\n  // 服务端 store 更新给客户端\r\n  store: any;\r\n}\r\n\r\nclass MyApp extends App<P> {\r\n  static async getInitialProps({ Component, ctx }) {\r\n    // 全局获取session里的用户数据\r\n    /*\r\n    let { store } = ctx;\r\n    let session = ctx.req.session;\r\n    let userInfo = session ? session.userInfo : {};\r\n    if (!store.getState().user.id) {\r\n      store.dispatch(actions.getUserInfo(userInfo));\r\n    }\r\n    */\r\n    let pageProps = Component.getInitialProps\r\n      ? await Component.getInitialProps({ ctx })\r\n      : {};\r\n    return {\r\n      pageProps,\r\n    };\r\n  }\r\n\r\n  // 页面切换进行Loading加载\r\n  startLoading = () => {\r\n    message.loading('');\r\n  };\r\n\r\n  stopLoading = () => {\r\n    message.destroy();\r\n  };\r\n\r\n  componentDidMount() {\r\n    Router.events.on('routeChangeStart', this.startLoading);\r\n    Router.events.on('routeChangeComplete', this.stopLoading);\r\n    Router.events.on('routeChangeError', this.stopLoading);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Router.events.off('routeChangeStart', this.startLoading);\r\n    Router.events.off('routeChangeComplete', this.stopLoading);\r\n    Router.events.off('routeChangeError', this.stopLoading);\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps, store } = this.props;\r\n    return (\r\n      <Provider store={store}>\r\n        <LayOut>\r\n          <Component {...pageProps} />\r\n        </LayOut>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRedux(initStore)(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}