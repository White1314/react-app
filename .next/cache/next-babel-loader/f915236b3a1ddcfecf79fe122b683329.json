{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport * as actions from '../actions';\n\nvar Index = function Index(_ref) {\n  var user = _ref.user;\n  return __jsx(\"div\", null, user.id);\n};\n\nIndex.getInitialProps = function _callee(_ref2) {\n  var ctx, store, userInfo;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          ctx = _ref2.ctx;\n          store = ctx.store;\n          userInfo = ctx.req.session.userInfo;\n          userInfo = userInfo ? userInfo : {};\n\n          if (!store.getState().user.id) {\n            store.dispatch(actions.getUserInfo(userInfo));\n          } // return { ...store.getState() };\n\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/360Downloads/Vscode/program/Next-Github-App/pages/index.tsx"],"names":["actions","Index","user","id","getInitialProps","ctx","store","userInfo","req","session","getState","dispatch","getUserInfo"],"mappings":";;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,YAAzB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC1B,SAAO,mBAAMA,IAAI,CAACC,EAAX,CAAP;AACD,CAFD;;AAIAF,KAAK,CAACG,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,SAASA,GAAT;AACdC,UAAAA,KADc,GACJD,GADI,CACdC,KADc;AAElBC,UAAAA,QAFkB,GAEPF,GAAG,CAACG,GAAJ,CAAQC,OAAR,CAAgBF,QAFT;AAGtBA,UAAAA,QAAQ,GAAGA,QAAQ,GAAGA,QAAH,GAAc,EAAjC;;AACA,cAAI,CAACD,KAAK,CAACI,QAAN,GAAiBR,IAAjB,CAAsBC,EAA3B,EAA+B;AAC7BG,YAAAA,KAAK,CAACK,QAAN,CAAeX,OAAO,CAACY,WAAR,CAAoBL,QAApB,CAAf;AACD,WANqB,CAOtB;;;AAPsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAUA,eAAeN,KAAf","sourcesContent":["import * as actions from '../actions';\r\nimport store from '../reducers';\r\n\r\nconst Index = ({ user }) => {\r\n  return <div>{user.id}</div>;\r\n};\r\n\r\nIndex.getInitialProps = async ({ ctx }) => {\r\n  const { store } = ctx;\r\n  let userInfo = ctx.req.session.userInfo;\r\n  userInfo = userInfo ? userInfo : {};\r\n  if (!store.getState().user.id) {\r\n    store.dispatch(actions.getUserInfo(userInfo));\r\n  }\r\n  // return { ...store.getState() };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}