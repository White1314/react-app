{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { memo, useMemo } from 'react';\nimport MarkdowIt from 'markdown-it'; // markdown-body\n\nimport 'github-markdown-css';\nconst md = new MarkdowIt({\n  html: true,\n  linkify: true\n});\n\nconst baseToUtf = str => {\n  // 处理中文乱码\n  return decodeURIComponent(escape(atob(str)));\n};\n\nconst Markdown = memo(({\n  content,\n  isBase64\n}) => {\n  content = content || '';\n  const markdown = isBase64 ? baseToUtf(content) : content;\n  const html = useMemo(() => md.render(markdown), [markdown]);\n  return __jsx(\"div\", {\n    className: \"markdown-body\"\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: html\n    }\n  }));\n});\nexport default Markdown;","map":{"version":3,"sources":["D:/360Downloads/Vscode/program/Next-Github-App/components/Markdown.tsx"],"names":["memo","useMemo","MarkdowIt","md","html","linkify","baseToUtf","str","decodeURIComponent","escape","atob","Markdown","content","isBase64","markdown","render","__html"],"mappings":";;AAAA,SAAaA,IAAb,EAAmBC,OAAnB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AACA,OAAO,qBAAP;AAEA,MAAMC,EAAE,GAAG,IAAID,SAAJ,CAAc;AACvBE,EAAAA,IAAI,EAAE,IADiB;AAEvBC,EAAAA,OAAO,EAAE;AAFc,CAAd,CAAX;;AAKA,MAAMC,SAAS,GAAIC,GAAD,IAAc;AAC9B;AACA,SAAOC,kBAAkB,CAACC,MAAM,CAACC,IAAI,CAACH,GAAD,CAAL,CAAP,CAAzB;AACD,CAHD;;AAUA,MAAMI,QAAe,GAAGX,IAAI,CAAC,CAAC;AAAEY,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA2B;AACtDD,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,QAAME,QAAQ,GAAGD,QAAQ,GAAGP,SAAS,CAACM,OAAD,CAAZ,GAAwBA,OAAjD;AACA,QAAMR,IAAI,GAAGH,OAAO,CAAC,MAAME,EAAE,CAACY,MAAH,CAAUD,QAAV,CAAP,EAA4B,CAACA,QAAD,CAA5B,CAApB;AACA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,uBAAuB,EAAE;AAAEE,MAAAA,MAAM,EAAEZ;AAAV;AAA9B,IADF,CADF;AAKD,CAT2B,CAA5B;AAWA,eAAeO,QAAf","sourcesContent":["import { FC, memo, useMemo } from 'react';\r\nimport MarkdowIt from 'markdown-it';\r\n// markdown-body\r\nimport 'github-markdown-css';\r\n\r\nconst md = new MarkdowIt({\r\n  html: true,\r\n  linkify: true,\r\n});\r\n\r\nconst baseToUtf = (str: any) => {\r\n  // 处理中文乱码\r\n  return decodeURIComponent(escape(atob(str)));\r\n};\r\n\r\ninterface P {\r\n  content: any;\r\n  isBase64: any;\r\n}\r\n\r\nconst Markdown: FC<P> = memo(({ content, isBase64 }) => {\r\n  content = content || '';\r\n  const markdown = isBase64 ? baseToUtf(content) : content;\r\n  const html = useMemo(() => md.render(markdown), [markdown]);\r\n  return (\r\n    <div className=\"markdown-body\">\r\n      <div dangerouslySetInnerHTML={{ __html: html }}></div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Markdown;\r\n"]},"metadata":{},"sourceType":"module"}