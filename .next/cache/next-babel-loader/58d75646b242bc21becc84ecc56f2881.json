{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport * as actions from '../actions';\n\nvar Index = function Index() {\n  return __jsx(\"div\", null, \"index\");\n};\n\nIndex.getInitialProps = function _callee(_ref) {\n  var ctx, store, userInfo;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          ctx = _ref.ctx;\n          store = ctx.store;\n          userInfo = ctx.req.session.userInfo;\n          userInfo = userInfo ? userInfo : {};\n\n          if (!store.getState().user.id) {\n            store.dispatch(actions.getUserInfo(userInfo));\n          } //console.log(ctx.isServer);\n\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/360Downloads/Vscode/program/Next-Github-App/pages/index.tsx"],"names":["actions","Index","getInitialProps","ctx","store","userInfo","req","session","getState","user","id","dispatch","getUserInfo"],"mappings":";;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,YAAzB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,SAAO,2BAAP;AACD,CAFD;;AAIAA,KAAK,CAACC,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,QAASA,GAAT;AACdC,UAAAA,KADc,GACJD,GADI,CACdC,KADc;AAElBC,UAAAA,QAFkB,GAEPF,GAAG,CAACG,GAAJ,CAAQC,OAAR,CAAgBF,QAFT;AAGtBA,UAAAA,QAAQ,GAAGA,QAAQ,GAAGA,QAAH,GAAc,EAAjC;;AACA,cAAI,CAACD,KAAK,CAACI,QAAN,GAAiBC,IAAjB,CAAsBC,EAA3B,EAA+B;AAC7BN,YAAAA,KAAK,CAACO,QAAN,CAAeX,OAAO,CAACY,WAAR,CAAoBP,QAApB,CAAf;AACD,WANqB,CAOtB;;;AAPsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAUA,eAAeJ,KAAf","sourcesContent":["import * as actions from '../actions';\r\n\r\nconst Index = () => {\r\n  return <div>index</div>;\r\n};\r\n\r\nIndex.getInitialProps = async ({ ctx }) => {\r\n  const { store } = ctx;\r\n  let userInfo = ctx.req.session.userInfo;\r\n  userInfo = userInfo ? userInfo : {};\r\n  if (!store.getState().user.id) {\r\n    store.dispatch(actions.getUserInfo(userInfo));\r\n  }\r\n  //console.log(ctx.isServer);\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}