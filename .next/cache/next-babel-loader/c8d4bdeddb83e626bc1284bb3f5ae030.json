{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useSelector } from 'react-redux'; //import Link from 'next/link';\n\nimport { MailOutlined } from '@ant-design/icons';\nimport * as actions from '../actions'; //import post from '../axios';\n\nimport { getApiData } from '../server/utils.js';\nimport { OAUTH_URL } from '../config.js';\nimport Repo from '../components/Repo';\n\nconst Index = () => {\n  const {\n    id,\n    avatar_url,\n    login,\n    name,\n    bio,\n    email\n  } = useSelector(state => state.user);\n  const userRepo = useSelector(state => state.home.user_repo);\n  return __jsx(React.Fragment, null, !id ? __jsx(\"div\", {\n    className: \"jsx-4222958821\" + \" \" + \"root\"\n  }, __jsx(_Button, {\n    type: \"primary\",\n    href: OAUTH_URL\n  }, \"\\u70B9\\u51FB\\u767B\\u5F55\")) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-4222958821\" + \" \" + \"user-info\"\n  }, __jsx(\"img\", {\n    src: avatar_url,\n    alt: \"\",\n    className: \"jsx-4222958821\" + \" \" + \"avatar\"\n  }), __jsx(\"span\", {\n    className: \"jsx-4222958821\" + \" \" + \"login\"\n  }, login), name ? __jsx(\"span\", {\n    className: \"jsx-4222958821\" + \" \" + \"name\"\n  }, name) : null, bio ? __jsx(\"span\", {\n    className: \"jsx-4222958821\" + \" \" + \"bio\"\n  }, bio) : null, email ? __jsx(\"p\", {\n    className: \"jsx-4222958821\" + \" \" + \"email\"\n  }, __jsx(MailOutlined, {\n    style: {\n      marginRight: 10\n    }\n  }), __jsx(\"a\", {\n    href: `mailto:${email}`,\n    className: \"jsx-4222958821\"\n  }, email)) : null), __jsx(\"div\", {\n    className: \"jsx-4222958821\" + \" \" + \"user-repo\"\n  }, userRepo.map(item => __jsx(Repo, {\n    repo: item\n  })))), __jsx(_JSXStyle, {\n    id: \"4222958821\"\n  }, \".root.jsx-4222958821{width:100%;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.user-info.jsx-4222958821{width:200px;margin-right:40px;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.avatar.jsx-4222958821{width:100%;border-radius:5px;}.login.jsx-4222958821{font-weight:300;font-size:20px;margin-top:20px;color:#666;}.name.jsx-4222958821{margin-top:20px;font-size:16px;color:#777;}.bio.jsx-4222958821{margin-top:20px;color:#333;}.email.jsx-4222958821{margin-top:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFwzNjBEb3dubG9hZHNcXFZzY29kZVxccHJvZ3JhbVxcTmV4dC1HaXRodWItQXBwXFxwYWdlc1xcaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStEUyxBQUd3QixBQU9DLEFBT0QsQUFJSyxBQU1BLEFBS0EsQUFJQSxXQWhDSixBQWNNLENBUEEsSUFXSCxBQU1BLEFBS0osQUFJYixPQWhDZSxJQTZCZixFQWZBLENBUGdCLENBV0UsQUFNTCxXQUNiLEtBTmEsV0FDYiw0QkFaZSxXQVBVLCtEQVFELG9DQVBILDBDQVFyQixtREFQQSIsImZpbGUiOiJEOlxcMzYwRG93bmxvYWRzXFxWc2NvZGVcXHByb2dyYW1cXE5leHQtR2l0aHViLUFwcFxccGFnZXNcXGluZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVNlbGVjdG9yIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xyXG4vL2ltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XHJcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJ2FudGQnO1xyXG5pbXBvcnQgeyBNYWlsT3V0bGluZWQgfSBmcm9tICdAYW50LWRlc2lnbi9pY29ucyc7XHJcblxyXG5pbXBvcnQgKiBhcyBhY3Rpb25zIGZyb20gJy4uL2FjdGlvbnMnO1xyXG4vL2ltcG9ydCBwb3N0IGZyb20gJy4uL2F4aW9zJztcclxuaW1wb3J0IHsgZ2V0QXBpRGF0YSB9IGZyb20gJy4uL3NlcnZlci91dGlscy5qcyc7XHJcbmltcG9ydCB7IE9BVVRIX1VSTCB9IGZyb20gJy4uL2NvbmZpZy5qcyc7XHJcbmltcG9ydCBSZXBvIGZyb20gJy4uL2NvbXBvbmVudHMvUmVwbyc7XHJcblxyXG5pbnRlcmZhY2UgdXNlclN0YXRlIHtcclxuICB1c2VyOiB7XHJcbiAgICBpZDogbnVtYmVyO1xyXG4gICAgYXZhdGFyX3VybDogc3RyaW5nO1xyXG4gICAgbG9naW46IHN0cmluZztcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIGJpbzogc3RyaW5nO1xyXG4gICAgZW1haWw6IHN0cmluZztcclxuICB9O1xyXG59XHJcblxyXG5pbnRlcmZhY2UgaG9tZVN0YXRlIHtcclxuICBob21lOiB7XHJcbiAgICB1c2VyX3JlcG86IEFycmF5PE9iamVjdD47XHJcbiAgfTtcclxufVxyXG5cclxuY29uc3QgSW5kZXggPSAoKSA9PiB7XHJcbiAgY29uc3QgeyBpZCwgYXZhdGFyX3VybCwgbG9naW4sIG5hbWUsIGJpbywgZW1haWwgfSA9IHVzZVNlbGVjdG9yKFxyXG4gICAgKHN0YXRlOiB1c2VyU3RhdGUpID0+IHN0YXRlLnVzZXJcclxuICApO1xyXG4gIGNvbnN0IHVzZXJSZXBvID0gdXNlU2VsZWN0b3IoKHN0YXRlOiBob21lU3RhdGUpID0+IHN0YXRlLmhvbWUudXNlcl9yZXBvKTtcclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgeyFpZCA/IChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvb3RcIj5cclxuICAgICAgICAgIDxCdXR0b24gdHlwZT1cInByaW1hcnlcIiBocmVmPXtPQVVUSF9VUkx9PlxyXG4gICAgICAgICAgICDngrnlh7vnmbvlvZVcclxuICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICApIDogKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInVzZXItaW5mb1wiPlxyXG4gICAgICAgICAgICA8aW1nIHNyYz17YXZhdGFyX3VybH0gYWx0PVwiXCIgY2xhc3NOYW1lPVwiYXZhdGFyXCIgLz5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibG9naW5cIj57bG9naW59PC9zcGFuPlxyXG4gICAgICAgICAgICB7bmFtZSA/IDxzcGFuIGNsYXNzTmFtZT1cIm5hbWVcIj57bmFtZX08L3NwYW4+IDogbnVsbH1cclxuICAgICAgICAgICAge2JpbyA/IDxzcGFuIGNsYXNzTmFtZT1cImJpb1wiPntiaW99PC9zcGFuPiA6IG51bGx9XHJcbiAgICAgICAgICAgIHtlbWFpbCA/IChcclxuICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJlbWFpbFwiPlxyXG4gICAgICAgICAgICAgICAgPE1haWxPdXRsaW5lZCBzdHlsZT17eyBtYXJnaW5SaWdodDogMTAgfX0gLz5cclxuICAgICAgICAgICAgICAgIDxhIGhyZWY9e2BtYWlsdG86JHtlbWFpbH1gfT57ZW1haWx9PC9hPlxyXG4gICAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICAgKSA6IG51bGx9XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidXNlci1yZXBvXCI+XHJcbiAgICAgICAgICAgIHt1c2VyUmVwby5tYXAoKGl0ZW0pID0+IChcclxuICAgICAgICAgICAgICA8UmVwbyByZXBvPXtpdGVtfSAvPlxyXG4gICAgICAgICAgICApKX1cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvPlxyXG4gICAgICApfVxyXG4gICAgICA8c3R5bGUganN4PlxyXG4gICAgICAgIHtgXHJcbiAgICAgICAgICAucm9vdCB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLnVzZXItaW5mbyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA0MHB4O1xyXG4gICAgICAgICAgICBmbGV4LXNocmluazogMDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5hdmF0YXIge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLmxvZ2luIHtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgICAgICAgICBjb2xvcjogIzY2NjtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5uYW1lIHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICAgICAgICBjb2xvcjogIzc3NztcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5iaW8ge1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgICAgICAgICBjb2xvcjogIzMzMztcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5lbWFpbCB7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgYH1cclxuICAgICAgPC9zdHlsZT5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5JbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoeyBjdHggfSkgPT4ge1xyXG4gIC8vIOivt+axgiBnaXRodWIg5pWw5o2u77yM5Zug5Li65LiN6IO95pq06ZyyIHRva2Vu77yM5bCG6K+35rGC5Luj55CG5Yiw5pyN5Yqh5ZmoXHJcbiAgLy8g5pyN5Yqh5Zmo5riy5p+T6buY6K6k56uv5Y+j5Li6IDgwXHJcbiAgY29uc3QgeyBzdG9yZSB9ID0gY3R4O1xyXG4gIC8qXHJcbiAgY29uc3QgcmVwb0RhdGEgPSBhd2FpdCBnZXRBcGlEYXRhKGN0eCwgJy9hcGkvcmVwb3NpdG9yeScpO1xyXG4gIHN0b3JlLmRpc3BhdGNoKGFjdGlvbnMuZ2V0R2l0aHViUmVwb3NpdG9yeShyZXBvRGF0YSkpO1xyXG4gICovXHJcbiAgLyogIOafpeeci+eUqOaIt+S7k+W6k+S/oeaBr+mcgOWFiOeZu+W9lVxyXG4gIGNvbnN0IGlkID0gc3RvcmUuZ2V0U3RhdGUoKS51c2VyLmlkO1xyXG4gIGlmKCFpZCkge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICAqL1xyXG4gIGNvbnN0IHVzZXJSZXBvRGF0YSA9IGF3YWl0IGdldEFwaURhdGEoY3R4LCAnL2FwaS91c2VyL3JlcG9zJyk7XHJcbiAgc3RvcmUuZGlzcGF0Y2goYWN0aW9ucy5nZXRVc2VyUmVwb3ModXNlclJlcG9EYXRhKSk7XHJcbiAgLy9jb25zdCB1c2VyU3RhcnJlZFJlcG9EYXRhID0gYXdhaXQgZ2V0QXBpRGF0YShjdHgsICcvYXBpL3VzZXIvc3RhcnJlZCcpO1xyXG4gIC8vc3RvcmUuZGlzcGF0Y2goYWN0aW9ucy5nZXRVc2VyUmVwb3ModXNlclN0YXJyZWRSZXBvRGF0YSkpO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgSW5kZXg7XHJcbiJdfQ== */\\n/*@ sourceURL=D:\\\\\\\\360Downloads\\\\\\\\Vscode\\\\\\\\program\\\\\\\\Next-Github-App\\\\\\\\pages\\\\\\\\index.tsx */\"));\n};\n\nIndex.getInitialProps = async ({\n  ctx\n}) => {\n  // 请求 github 数据，因为不能暴露 token，将请求代理到服务器\n  // 服务器渲染默认端口为 80\n  const {\n    store\n  } = ctx;\n  /*\r\n  const repoData = await getApiData(ctx, '/api/repository');\r\n  store.dispatch(actions.getGithubRepository(repoData));\r\n  */\n\n  /*  查看用户仓库信息需先登录\r\n  const id = store.getState().user.id;\r\n  if(!id) {\r\n    return;\r\n  }\r\n  */\n\n  const userRepoData = await getApiData(ctx, '/api/user/repos');\n  store.dispatch(actions.getUserRepos(userRepoData)); //const userStarredRepoData = await getApiData(ctx, '/api/user/starred');\n  //store.dispatch(actions.getUserRepos(userStarredRepoData));\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/360Downloads/Vscode/program/Next-Github-App/pages/index.tsx"],"names":["useSelector","MailOutlined","actions","getApiData","OAUTH_URL","Repo","Index","id","avatar_url","login","name","bio","email","state","user","userRepo","home","user_repo","marginRight","map","item","getInitialProps","ctx","store","userRepoData","dispatch","getUserRepos"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,aAA5B,C,CACA;;AAEA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB,C,CACA;;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAmBA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,UAAN;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,IAAzB;AAA+BC,IAAAA,GAA/B;AAAoCC,IAAAA;AAApC,MAA8CZ,WAAW,CAC5Da,KAAD,IAAsBA,KAAK,CAACC,IADiC,CAA/D;AAGA,QAAMC,QAAQ,GAAGf,WAAW,CAAEa,KAAD,IAAsBA,KAAK,CAACG,IAAN,CAAWC,SAAlC,CAA5B;AACA,SACE,4BACG,CAACV,EAAD,GACC;AAAA,wCAAe;AAAf,KACE;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,IAAI,EAAEH;AAA7B,gCADF,CADD,GAOC,4BACE;AAAA,wCAAe;AAAf,KACE;AAAK,IAAA,GAAG,EAAEI,UAAV;AAAsB,IAAA,GAAG,EAAC,EAA1B;AAAA,wCAAuC;AAAvC,IADF,EAEE;AAAA,wCAAgB;AAAhB,KAAyBC,KAAzB,CAFF,EAGGC,IAAI,GAAG;AAAA,wCAAgB;AAAhB,KAAwBA,IAAxB,CAAH,GAA0C,IAHjD,EAIGC,GAAG,GAAG;AAAA,wCAAgB;AAAhB,KAAuBA,GAAvB,CAAH,GAAwC,IAJ9C,EAKGC,KAAK,GACJ;AAAA,wCAAa;AAAb,KACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEM,MAAAA,WAAW,EAAE;AAAf;AAArB,IADF,EAEE;AAAG,IAAA,IAAI,EAAG,UAASN,KAAM,EAAzB;AAAA;AAAA,KAA6BA,KAA7B,CAFF,CADI,GAKF,IAVN,CADF,EAaE;AAAA,wCAAe;AAAf,KACGG,QAAQ,CAACI,GAAT,CAAcC,IAAD,IACZ,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA;AAAZ,IADD,CADH,CAbF,CARJ;AAAA;AAAA,k2MADF;AAuED,CA5ED;;AA8EAd,KAAK,CAACe,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACzC;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYD,GAAlB;AACA;;;;;AAIA;;;;;;;AAMA,QAAME,YAAY,GAAG,MAAMrB,UAAU,CAACmB,GAAD,EAAM,iBAAN,CAArC;AACAC,EAAAA,KAAK,CAACE,QAAN,CAAevB,OAAO,CAACwB,YAAR,CAAqBF,YAArB,CAAf,EAfyC,CAgBzC;AACA;AACD,CAlBD;;AAoBA,eAAelB,KAAf","sourcesContent":["import { useSelector } from 'react-redux';\r\n//import Link from 'next/link';\r\nimport { Button } from 'antd';\r\nimport { MailOutlined } from '@ant-design/icons';\r\n\r\nimport * as actions from '../actions';\r\n//import post from '../axios';\r\nimport { getApiData } from '../server/utils.js';\r\nimport { OAUTH_URL } from '../config.js';\r\nimport Repo from '../components/Repo';\r\n\r\ninterface userState {\r\n  user: {\r\n    id: number;\r\n    avatar_url: string;\r\n    login: string;\r\n    name: string;\r\n    bio: string;\r\n    email: string;\r\n  };\r\n}\r\n\r\ninterface homeState {\r\n  home: {\r\n    user_repo: Array<Object>;\r\n  };\r\n}\r\n\r\nconst Index = () => {\r\n  const { id, avatar_url, login, name, bio, email } = useSelector(\r\n    (state: userState) => state.user\r\n  );\r\n  const userRepo = useSelector((state: homeState) => state.home.user_repo);\r\n  return (\r\n    <>\r\n      {!id ? (\r\n        <div className=\"root\">\r\n          <Button type=\"primary\" href={OAUTH_URL}>\r\n            点击登录\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"user-info\">\r\n            <img src={avatar_url} alt=\"\" className=\"avatar\" />\r\n            <span className=\"login\">{login}</span>\r\n            {name ? <span className=\"name\">{name}</span> : null}\r\n            {bio ? <span className=\"bio\">{bio}</span> : null}\r\n            {email ? (\r\n              <p className=\"email\">\r\n                <MailOutlined style={{ marginRight: 10 }} />\r\n                <a href={`mailto:${email}`}>{email}</a>\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"user-repo\">\r\n            {userRepo.map((item) => (\r\n              <Repo repo={item} />\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n      <style jsx>\r\n        {`\r\n          .root {\r\n            width: 100%;\r\n            height: 100%;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n          }\r\n          .user-info {\r\n            width: 200px;\r\n            margin-right: 40px;\r\n            flex-shrink: 0;\r\n            display: flex;\r\n            flex-direction: column;\r\n          }\r\n          .avatar {\r\n            width: 100%;\r\n            border-radius: 5px;\r\n          }\r\n          .login {\r\n            font-weight: 300;\r\n            font-size: 20px;\r\n            margin-top: 20px;\r\n            color: #666;\r\n          }\r\n          .name {\r\n            margin-top: 20px;\r\n            font-size: 16px;\r\n            color: #777;\r\n          }\r\n          .bio {\r\n            margin-top: 20px;\r\n            color: #333;\r\n          }\r\n          .email {\r\n            margin-top: 20px;\r\n          }\r\n        `}\r\n      </style>\r\n    </>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async ({ ctx }) => {\r\n  // 请求 github 数据，因为不能暴露 token，将请求代理到服务器\r\n  // 服务器渲染默认端口为 80\r\n  const { store } = ctx;\r\n  /*\r\n  const repoData = await getApiData(ctx, '/api/repository');\r\n  store.dispatch(actions.getGithubRepository(repoData));\r\n  */\r\n  /*  查看用户仓库信息需先登录\r\n  const id = store.getState().user.id;\r\n  if(!id) {\r\n    return;\r\n  }\r\n  */\r\n  const userRepoData = await getApiData(ctx, '/api/user/repos');\r\n  store.dispatch(actions.getUserRepos(userRepoData));\r\n  //const userStarredRepoData = await getApiData(ctx, '/api/user/starred');\r\n  //store.dispatch(actions.getUserRepos(userStarredRepoData));\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}