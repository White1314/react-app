{"ast":null,"code":"import \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/list/style/css\";\nimport _List from \"antd/lib/list\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nconst LANGUAGES = ['JavaScript', 'HTML', 'CSS', 'TypeScript', 'Java', 'Rust'];\nconst SORT_TYPES = [{\n  name: 'Best Match'\n}, {\n  name: 'Most Stars',\n  value: 'stars',\n  order: 'dsc'\n}, {\n  name: 'Fewest Stars',\n  value: 'stars',\n  order: 'asc'\n}, {\n  name: 'Most Forks',\n  value: 'forks',\n  order: 'dsc'\n}, {\n  name: 'Fewest Forks',\n  value: 'forks',\n  order: 'asc'\n}];\n\nconst Search = ({}) => {\n  return __jsx(React.Fragment, null, __jsx(_Row, {\n    gutter: 20\n  }, __jsx(_Col, {\n    span: 6\n  }, __jsx(_List, {\n    bordered: true,\n    header: __jsx(\"span\", {\n      className: \"list-header\"\n    }, \"\\u8BED\\u8A00\"),\n    style: {\n      marginBottom: 20\n    },\n    dataSource: LANGUAGES,\n    renderItem: item => __jsx(_List.Item, null, __jsx(\"a\", {\n      href: \"/search\"\n    }, item))\n  }))), __jsx(_Row, {\n    gutter: 20\n  }, __jsx(_Col, {\n    span: 6\n  }, __jsx(_List, {\n    bordered: true,\n    header: __jsx(\"span\", {\n      className: \"list-header\"\n    }, \"\\u6392\\u5E8F\"),\n    dataSource: SORT_TYPES,\n    renderItem: item => __jsx(_List.Item, null, __jsx(\"a\", {\n      href: \"/search\"\n    }, item.name))\n  }))));\n};\n\nSearch.getInitialProps = async ({\n  ctx\n}) => {\n  const {\n    name,\n    sort,\n    lang,\n    order,\n    page\n  } = ctx.query; // `https://api.github.com/search/repositories?q=${name}`\n};\n\nexport default withRouter(Search);","map":{"version":3,"sources":["D:/360Downloads/Vscode/program/Next-Github-App/pages/search.tsx"],"names":["withRouter","LANGUAGES","SORT_TYPES","name","value","order","Search","marginBottom","item","getInitialProps","ctx","sort","lang","page","query"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AAGA,MAAMC,SAAS,GAAG,CAAC,YAAD,EAAe,MAAf,EAAuB,KAAvB,EAA8B,YAA9B,EAA4C,MAA5C,EAAoD,MAApD,CAAlB;AACA,MAAMC,UAAU,GAAG,CACjB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CADiB,EAEjB;AAAEA,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE,OAA7B;AAAsCC,EAAAA,KAAK,EAAE;AAA7C,CAFiB,EAGjB;AAAEF,EAAAA,IAAI,EAAE,cAAR;AAAwBC,EAAAA,KAAK,EAAE,OAA/B;AAAwCC,EAAAA,KAAK,EAAE;AAA/C,CAHiB,EAIjB;AAAEF,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE,OAA7B;AAAsCC,EAAAA,KAAK,EAAE;AAA7C,CAJiB,EAKjB;AAAEF,EAAAA,IAAI,EAAE,cAAR;AAAwBC,EAAAA,KAAK,EAAE,OAA/B;AAAwCC,EAAAA,KAAK,EAAE;AAA/C,CALiB,CAAnB;;AAQA,MAAMC,MAAM,GAAG,CAAC,EAAD,KAAQ;AACrB,SACE,4BACE;AAAK,IAAA,MAAM,EAAE;AAAb,KACE;AAAK,IAAA,IAAI,EAAE;AAAX,KACE;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,MAAM,EAAE;AAAM,MAAA,SAAS,EAAC;AAAhB,sBAFV;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAHT;AAIE,IAAA,UAAU,EAAEN,SAJd;AAKE,IAAA,UAAU,EAAGO,IAAD,IACV,YAAM,IAAN,QACE;AAAG,MAAA,IAAI,EAAC;AAAR,OAAmBA,IAAnB,CADF;AANJ,IADF,CADF,CADF,EAgBE;AAAK,IAAA,MAAM,EAAE;AAAb,KACE;AAAK,IAAA,IAAI,EAAE;AAAX,KACE;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,MAAM,EAAE;AAAM,MAAA,SAAS,EAAC;AAAhB,sBAFV;AAGE,IAAA,UAAU,EAAEN,UAHd;AAIE,IAAA,UAAU,EAAGM,IAAD,IACV,YAAM,IAAN,QACE;AAAG,MAAA,IAAI,EAAC;AAAR,OAAmBA,IAAI,CAACL,IAAxB,CADF;AALJ,IADF,CADF,CAhBF,CADF;AAiCD,CAlCD;;AAoCAG,MAAM,CAACG,eAAP,GAAyB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AAC1C,QAAM;AAAEP,IAAAA,IAAF;AAAQQ,IAAAA,IAAR;AAAcC,IAAAA,IAAd;AAAoBP,IAAAA,KAApB;AAA2BQ,IAAAA;AAA3B,MAAoCH,GAAG,CAACI,KAA9C,CAD0C,CAE1C;AACD,CAHD;;AAKA,eAAed,UAAU,CAACM,MAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router';\r\nimport { Row, Col, List } from 'antd';\r\n\r\nconst LANGUAGES = ['JavaScript', 'HTML', 'CSS', 'TypeScript', 'Java', 'Rust'];\r\nconst SORT_TYPES = [\r\n  { name: 'Best Match' },\r\n  { name: 'Most Stars', value: 'stars', order: 'dsc' },\r\n  { name: 'Fewest Stars', value: 'stars', order: 'asc' },\r\n  { name: 'Most Forks', value: 'forks', order: 'dsc' },\r\n  { name: 'Fewest Forks', value: 'forks', order: 'asc' },\r\n];\r\n\r\nconst Search = ({}) => {\r\n  return (\r\n    <>\r\n      <Row gutter={20}>\r\n        <Col span={6}>\r\n          <List\r\n            bordered\r\n            header={<span className=\"list-header\">语言</span>}\r\n            style={{ marginBottom: 20 }}\r\n            dataSource={LANGUAGES}\r\n            renderItem={(item) => (\r\n              <List.Item>\r\n                <a href=\"/search\">{item}</a>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={20}>\r\n        <Col span={6}>\r\n          <List\r\n            bordered\r\n            header={<span className=\"list-header\">排序</span>}\r\n            dataSource={SORT_TYPES}\r\n            renderItem={(item) => (\r\n              <List.Item>\r\n                <a href=\"/search\">{item.name}</a>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nSearch.getInitialProps = async ({ ctx }) => {\r\n  const { name, sort, lang, order, page } = ctx.query;\r\n  // `https://api.github.com/search/repositories?q=${name}`\r\n};\r\n\r\nexport default withRouter(Search);\r\n"]},"metadata":{},"sourceType":"module"}