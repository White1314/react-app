{"ast":null,"code":"import * as constants from '../constants';\nimport post from '../axios';\nimport { OAUTH_URL } from '../config';\n\nconst setUserInfo = payload => ({\n  type: constants.GET_USER_INFO,\n  payload\n});\n\nexport const getUserInfo = payload => {\n  return dispatch => {\n    dispatch(setUserInfo(payload));\n  };\n};\n\nconst setLoginOut = () => ({\n  type: constants.USER_LOGIN_OUT\n});\n\nexport const userLoginOut = () => {\n  return async dispatch => {\n    const data = await post({\n      url: '/userout'\n    });\n    data ? dispatch(setLoginOut()) : '';\n  };\n};\nexport const userPrepareOauth = async path => {\n  const data = await post({\n    url: `/prepareOauth?url=${path}`\n  });\n  data ? location.href = OAUTH_URL : null;\n};\n\nconst setGithubRepository = payload => ({\n  type: constants.GET_GITHUB_REPOSITORY,\n  payload\n});\n\nexport const getGithubRepository = payload => {\n  return async dispatch => {\n    dispatch(setGithubRepository(payload));\n  };\n};\n\nconst setUserRepos = payload => ({\n  type: constants.GET_USER_REPOS,\n  payload\n});\n\nexport const getUserRepos = payload => {\n  return async dispatch => {\n    dispatch(setUserRepos(payload));\n  };\n};\n\nconst setUserStarredRepos = payload => ({\n  type: constants.GET_USER_STARRED_REPOS,\n  payload\n});\n\nexport const getUserStarredRepos = payload => {\n  return async dispatch => {\n    dispatch(setUserStarredRepos(payload));\n  };\n};","map":{"version":3,"sources":["D:/360Downloads/Vscode/program/Next-Github-App/actions/index.tsx"],"names":["constants","post","OAUTH_URL","setUserInfo","payload","type","GET_USER_INFO","getUserInfo","dispatch","setLoginOut","USER_LOGIN_OUT","userLoginOut","data","url","userPrepareOauth","path","location","href","setGithubRepository","GET_GITHUB_REPOSITORY","getGithubRepository","setUserRepos","GET_USER_REPOS","getUserRepos","setUserStarredRepos","GET_USER_STARRED_REPOS","getUserStarredRepos"],"mappings":"AACA,OAAO,KAAKA,SAAZ,MAA2B,cAA3B;AACA,OAAOC,IAAP,MAAiB,UAAjB;AACA,SAASC,SAAT,QAA0B,WAA1B;;AAQA,MAAMC,WAAW,GAAIC,OAAD,KAAiB;AACnCC,EAAAA,IAAI,EAAEL,SAAS,CAACM,aADmB;AAEnCF,EAAAA;AAFmC,CAAjB,CAApB;;AAKA,OAAO,MAAMG,WAAW,GAAIH,OAAD,IAAgB;AACzC,SAAQI,QAAD,IAAwB;AAC7BA,IAAAA,QAAQ,CAACL,WAAW,CAACC,OAAD,CAAZ,CAAR;AACD,GAFD;AAGD,CAJM;;AAMP,MAAMK,WAAW,GAAG,OAAO;AACzBJ,EAAAA,IAAI,EAAEL,SAAS,CAACU;AADS,CAAP,CAApB;;AAIA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAO,MAAOH,QAAP,IAA8B;AACnC,UAAMI,IAAI,GAAG,MAAMX,IAAI,CAAC;AAAEY,MAAAA,GAAG,EAAE;AAAP,KAAD,CAAvB;AACAD,IAAAA,IAAI,GAAGJ,QAAQ,CAACC,WAAW,EAAZ,CAAX,GAA6B,EAAjC;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAMK,gBAAgB,GAAG,MAAOC,IAAP,IAAwB;AACtD,QAAMH,IAAI,GAAG,MAAMX,IAAI,CAAC;AAAEY,IAAAA,GAAG,EAAG,qBAAoBE,IAAK;AAAjC,GAAD,CAAvB;AACAH,EAAAA,IAAI,GAAII,QAAQ,CAACC,IAAT,GAAgBf,SAApB,GAAiC,IAArC;AACD,CAHM;;AAKP,MAAMgB,mBAAmB,GAAId,OAAD,KAAiB;AAC3CC,EAAAA,IAAI,EAAEL,SAAS,CAACmB,qBAD2B;AAE3Cf,EAAAA;AAF2C,CAAjB,CAA5B;;AAKA,OAAO,MAAMgB,mBAAmB,GAAIhB,OAAD,IAAgB;AACjD,SAAO,MAAOI,QAAP,IAA8B;AACnCA,IAAAA,QAAQ,CAACU,mBAAmB,CAACd,OAAD,CAApB,CAAR;AACD,GAFD;AAGD,CAJM;;AAMP,MAAMiB,YAAY,GAAIjB,OAAD,KAAiB;AACpCC,EAAAA,IAAI,EAAEL,SAAS,CAACsB,cADoB;AAEpClB,EAAAA;AAFoC,CAAjB,CAArB;;AAKA,OAAO,MAAMmB,YAAY,GAAInB,OAAD,IAAgB;AAC1C,SAAO,MAAOI,QAAP,IAA8B;AACnCA,IAAAA,QAAQ,CAACa,YAAY,CAACjB,OAAD,CAAb,CAAR;AACD,GAFD;AAGD,CAJM;;AAMP,MAAMoB,mBAAmB,GAAIpB,OAAD,KAAiB;AAC3CC,EAAAA,IAAI,EAAEL,SAAS,CAACyB,sBAD2B;AAE3CrB,EAAAA;AAF2C,CAAjB,CAA5B;;AAKA,OAAO,MAAMsB,mBAAmB,GAAItB,OAAD,IAAgB;AACjD,SAAO,MAAOI,QAAP,IAA8B;AACnCA,IAAAA,QAAQ,CAACgB,mBAAmB,CAACpB,OAAD,CAApB,CAAR;AACD,GAFD;AAGD,CAJM","sourcesContent":["import { Dispatch } from 'redux';\r\nimport * as constants from '../constants';\r\nimport post from '../axios';\r\nimport { OAUTH_URL } from '../config';\r\n\r\ninterface R {\r\n  code: number;\r\n}\r\n\r\ntype P = any;\r\n\r\nconst setUserInfo = (payload: P) => ({\r\n  type: constants.GET_USER_INFO,\r\n  payload,\r\n});\r\n\r\nexport const getUserInfo = (payload: P) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch(setUserInfo(payload));\r\n  };\r\n};\r\n\r\nconst setLoginOut = () => ({\r\n  type: constants.USER_LOGIN_OUT,\r\n});\r\n\r\nexport const userLoginOut = () => {\r\n  return async (dispatch: Dispatch) => {\r\n    const data = await post({ url: '/userout' });\r\n    data ? dispatch(setLoginOut()) : '';\r\n  };\r\n};\r\n\r\nexport const userPrepareOauth = async (path: string) => {\r\n  const data = await post({ url: `/prepareOauth?url=${path}` });\r\n  data ? (location.href = OAUTH_URL) : null;\r\n};\r\n\r\nconst setGithubRepository = (payload: P) => ({\r\n  type: constants.GET_GITHUB_REPOSITORY,\r\n  payload,\r\n});\r\n\r\nexport const getGithubRepository = (payload: P) => {\r\n  return async (dispatch: Dispatch) => {\r\n    dispatch(setGithubRepository(payload));\r\n  };\r\n};\r\n\r\nconst setUserRepos = (payload: P) => ({\r\n  type: constants.GET_USER_REPOS,\r\n  payload,\r\n});\r\n\r\nexport const getUserRepos = (payload: P) => {\r\n  return async (dispatch: Dispatch) => {\r\n    dispatch(setUserRepos(payload));\r\n  };\r\n};\r\n\r\nconst setUserStarredRepos = (payload: P) => ({\r\n  type: constants.GET_USER_STARRED_REPOS,\r\n  payload,\r\n});\r\n\r\nexport const getUserStarredRepos = (payload: P) => {\r\n  return async (dispatch: Dispatch) => {\r\n    dispatch(setUserStarredRepos(payload));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}