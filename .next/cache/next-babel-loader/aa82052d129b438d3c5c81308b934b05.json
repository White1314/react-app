{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actions from '../actions';\n\nvar Index = function Index(_ref) {\n  var user = _ref.user;\n  return __jsx(\"div\", null, \"user.id\");\n};\n\nIndex.getInitialProps = function _callee(_ref2) {\n  var ctx, store, userInfo;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          ctx = _ref2.ctx;\n          store = ctx.store;\n          userInfo = ctx.req.session.userInfo;\n          userInfo = userInfo ? userInfo : {};\n          store.dispatch(actions.getUserInfo(userInfo));\n          return _context.abrupt(\"return\", _objectSpread({}, store.getState()));\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/360Downloads/Vscode/program/Next-Github-App/pages/index.tsx"],"names":["actions","Index","user","getInitialProps","ctx","store","userInfo","req","session","dispatch","getUserInfo","getState"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,YAAzB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC1B,SAAO,6BAAP;AACD,CAFD;;AAIAD,KAAK,CAACE,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,SAASA,GAAT;AACdC,UAAAA,KADc,GACJD,GADI,CACdC,KADc;AAElBC,UAAAA,QAFkB,GAEPF,GAAG,CAACG,GAAJ,CAAQC,OAAR,CAAgBF,QAFT;AAGtBA,UAAAA,QAAQ,GAAGA,QAAQ,GAAGA,QAAH,GAAc,EAAjC;AACAD,UAAAA,KAAK,CAACI,QAAN,CAAeT,OAAO,CAACU,WAAR,CAAoBJ,QAApB,CAAf;AAJsB,6DAKVD,KAAK,CAACM,QAAN,EALU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAQA,eAAeV,KAAf","sourcesContent":["import * as actions from '../actions';\r\n\r\nconst Index = ({ user }) => {\r\n  return <div>user.id</div>;\r\n};\r\n\r\nIndex.getInitialProps = async ({ ctx }) => {\r\n  const { store } = ctx;\r\n  let userInfo = ctx.req.session.userInfo;\r\n  userInfo = userInfo ? userInfo : {};\r\n  store.dispatch(actions.getUserInfo(userInfo));\r\n  return { ...store.getState() };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}