{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as actions from '../actions';\n\nconst Index = ({}) => {\n  return __jsx(\"div\", null, \"index\");\n};\n\nIndex.getInitialProps = async ({\n  ctx\n}) => {\n  const {\n    store\n  } = ctx;\n  let userInfo = ctx.req.session.userInfo;\n  userInfo = userInfo ? userInfo : {};\n  store.dispatch(actions.getUserInfo(userInfo));\n  return _objectSpread({}, store.getState());\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/360Downloads/Vscode/program/Next-Github-App/pages/index.tsx"],"names":["actions","Index","getInitialProps","ctx","store","userInfo","req","session","dispatch","getUserInfo","getState"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,YAAzB;;AAEA,MAAMC,KAAK,GAAG,CAAC,EAAD,KAAQ;AACpB,SAAO,2BAAP;AACD,CAFD;;AAIAA,KAAK,CAACC,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAYD,GAAlB;AACA,MAAIE,QAAQ,GAAGF,GAAG,CAACG,GAAJ,CAAQC,OAAR,CAAgBF,QAA/B;AACAA,EAAAA,QAAQ,GAAGA,QAAQ,GAAGA,QAAH,GAAc,EAAjC;AACAD,EAAAA,KAAK,CAACI,QAAN,CAAeR,OAAO,CAACS,WAAR,CAAoBJ,QAApB,CAAf;AACA,2BAAYD,KAAK,CAACM,QAAN,EAAZ;AACD,CAND;;AAQA,eAAeT,KAAf","sourcesContent":["import * as actions from '../actions';\r\n\r\nconst Index = ({}) => {\r\n  return <div>index</div>;\r\n};\r\n\r\nIndex.getInitialProps = async ({ ctx }) => {\r\n  const { store } = ctx;\r\n  let userInfo = ctx.req.session.userInfo;\r\n  userInfo = userInfo ? userInfo : {};\r\n  store.dispatch(actions.getUserInfo(userInfo));\r\n  return { ...store.getState() };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}