{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport * as constants from '../constants';\nconst initState = {\n  count: 0\n};\nconst reducers = {\n  // 类似 user: useReducer\n  user: (state = initState, action) => {\n    console.log;\n\n    switch (action.type) {\n      case constants.ADD_COUNT:\n        return {\n          count: state.count + 10\n        };\n\n      default:\n        return state;\n    }\n  }\n}; // 中间件\n\nconst middleware = [thunk];\nconst reducer = combineReducers(reducers); // initState 接受服务端的数据并更新数据\n\nconst initStore = (initState = {}) => createStore(reducer, initState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default initStore;","map":{"version":3,"sources":["D:/360Downloads/Vscode/program/Next-Github-App/reducers/index.tsx"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","constants","initState","count","reducers","user","state","action","console","log","type","ADD_COUNT","middleware","reducer","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAO,KAAKC,SAAZ,MAA2B,cAA3B;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AADS,CAAlB;AAaA,MAAMC,QAAQ,GAAG;AACf;AACAC,EAAAA,IAAI,EAAE,CAACC,KAAQ,GAAGJ,SAAZ,EAAuBK,MAAvB,KAAqC;AACzCC,IAAAA,OAAO,CAACC,GAAR;;AACA,YAAQF,MAAM,CAACG,IAAf;AACE,WAAKT,SAAS,CAACU,SAAf;AACE,eAAO;AAAER,UAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAc;AAAvB,SAAP;;AACF;AACE,eAAOG,KAAP;AAJJ;AAMD;AAVc,CAAjB,C,CAaA;;AACA,MAAMM,UAAU,GAAG,CAACb,KAAD,CAAnB;AACA,MAAMc,OAAO,GAAGhB,eAAe,CAACO,QAAD,CAA/B,C,CAEA;;AACA,MAAMU,SAAS,GAAG,CAACZ,SAAS,GAAG,EAAb,KAChBN,WAAW,CACTiB,OADS,EAETX,SAFS,EAGTF,mBAAmB,CAACF,eAAe,CAAC,GAAGc,UAAJ,CAAhB,CAHV,CADb;;AAOA,eAAeE,SAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport * as constants from '../constants';\r\n\r\nconst initState = {\r\n  count: 0,\r\n};\r\n\r\ninterface S {\r\n  count: number;\r\n}\r\n\r\ninterface A {\r\n  type?: string;\r\n  payload?: any;\r\n}\r\n\r\nconst reducers = {\r\n  // 类似 user: useReducer\r\n  user: (state: S = initState, action: A) => {\r\n    console.log;\r\n    switch (action.type) {\r\n      case constants.ADD_COUNT:\r\n        return { count: state.count + 10 };\r\n      default:\r\n        return state;\r\n    }\r\n  },\r\n};\r\n\r\n// 中间件\r\nconst middleware = [thunk];\r\nconst reducer = combineReducers(reducers);\r\n\r\n// initState 接受服务端的数据并更新数据\r\nconst initStore = (initState = {}) =>\r\n  createStore(\r\n    reducer,\r\n    initState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n  );\r\n\r\nexport default initStore;\r\n"]},"metadata":{},"sourceType":"module"}