{"ast":null,"code":"import \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/list/style/css\";\nimport _List from \"antd/lib/list\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nimport { useSelector } from 'react-redux';\nimport { getApiData } from '../server/utils.js';\nimport * as actions from '../actions';\nimport { getLanguageLink, getSortTypesLink } from '../utils';\nimport Repo from '../components/Repo';\nconst LANGUAGES = ['JavaScript', 'HTML', 'CSS', 'TypeScript', 'Java', 'Rust'];\nconst SORT_TYPES = [{\n  name: 'Best Match'\n}, {\n  name: 'Most Stars',\n  value: 'stars',\n  order: 'dsc'\n}, {\n  name: 'Fewest Stars',\n  value: 'stars',\n  order: 'asc'\n}, {\n  name: 'Most Forks',\n  value: 'forks',\n  order: 'dsc'\n}, {\n  name: 'Fewest Forks',\n  value: 'forks',\n  order: 'asc'\n}];\nconst selectedItemStyle = {\n  borderLeft: '2px solid #6739b6',\n  fontWeight: 100\n};\n\nconst Search = ({\n  router\n}) => {\n  const {\n    query\n  } = router;\n  const total_count = useSelector(state => state.home.search_repo.total_count);\n  let items = useSelector(state => state.home.search_repo.items);\n  console.log(items);\n  if (!items) items = []; // useMomo 传参失败？？？\n\n  return __jsx(\"div\", {\n    className: \"jsx-3164429104\" + \" \" + \"root\"\n  }, __jsx(\"div\", {\n    className: \"jsx-3164429104\" + \" \" + \"menu\"\n  }, __jsx(_Row, {\n    gutter: 20\n  }, __jsx(_Col, {\n    span: 6\n  }, __jsx(_List, {\n    bordered: true,\n    header: __jsx(\"span\", {\n      className: \"jsx-3164429104\" + \" \" + \"list-header\"\n    }, \"\\u8BED\\u8A00\"),\n    style: {\n      marginBottom: 20\n    },\n    dataSource: LANGUAGES,\n    renderItem: item => {\n      let selected = item === query.lang;\n      return __jsx(_List.Item, {\n        style: selected ? selectedItemStyle : null\n      }, selected ? __jsx(\"span\", {\n        className: \"jsx-3164429104\"\n      }, item) : __jsx(\"a\", {\n        href: getLanguageLink(item, query),\n        className: \"jsx-3164429104\"\n      }, item));\n    }\n  }))), __jsx(_Row, {\n    gutter: 20\n  }, __jsx(_Col, {\n    span: 6\n  }, __jsx(_List, {\n    bordered: true,\n    header: __jsx(\"span\", {\n      className: \"jsx-3164429104\" + \" \" + \"list-header\"\n    }, \"\\u6392\\u5E8F\"),\n    dataSource: SORT_TYPES,\n    renderItem: item => {\n      let selected = false;\n\n      if (item.name === 'Best Match' && !query.sort) {\n        selected = true;\n      } else if (item.value === query.sort && item.order === query.order) {\n        selected = true;\n      }\n\n      return __jsx(_List.Item, {\n        style: selected ? selectedItemStyle : null\n      }, selected ? __jsx(\"span\", {\n        className: \"jsx-3164429104\"\n      }, item.name) : __jsx(\"a\", {\n        href: getSortTypesLink(item, query),\n        className: \"jsx-3164429104\"\n      }, item.name));\n    }\n  })), __jsx(_Col, {\n    span: 18\n  }, __jsx(\"h3\", {\n    className: \"jsx-3164429104\" + \" \" + \"repos-title\"\n  }, total_count, \" \\u4E2A\\u4ED3\\u5E93\"), items.map(item => __jsx(Repo, {\n    repo: item,\n    key: item.id\n  }))))), __jsx(_JSXStyle, {\n    id: \"3164429104\"\n  }, \".root.jsx-3164429104{height:100%;}.menu.jsx-3164429104{height:100%;overflow-x:hidden;overflow-y:auto;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFwzNjBEb3dubG9hZHNcXFZzY29kZVxccHJvZ3JhbVxcTmV4dC1HaXRodWItQXBwXFxwYWdlc1xcc2VhcmNoLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5R2tCLEFBR3VCLEFBR0EsWUFGZCxBQUdvQixrQkFDRixnQkFDbEIiLCJmaWxlIjoiRDpcXDM2MERvd25sb2Fkc1xcVnNjb2RlXFxwcm9ncmFtXFxOZXh0LUdpdGh1Yi1BcHBcXHBhZ2VzXFxzZWFyY2gudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd2l0aFJvdXRlciB9IGZyb20gJ25leHQvcm91dGVyJztcclxuaW1wb3J0IHsgUm93LCBDb2wsIExpc3QgfSBmcm9tICdhbnRkJztcclxuaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tICdyZWFjdC1yZWR1eCc7XHJcblxyXG5pbXBvcnQgeyBnZXRBcGlEYXRhIH0gZnJvbSAnLi4vc2VydmVyL3V0aWxzLmpzJztcclxuaW1wb3J0ICogYXMgYWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zJztcclxuaW1wb3J0IHsgZ2V0TGFuZ3VhZ2VMaW5rLCBnZXRTb3J0VHlwZXNMaW5rIH0gZnJvbSAnLi4vdXRpbHMnO1xyXG5pbXBvcnQgUmVwbyBmcm9tICcuLi9jb21wb25lbnRzL1JlcG8nO1xyXG5cclxuY29uc3QgTEFOR1VBR0VTID0gWydKYXZhU2NyaXB0JywgJ0hUTUwnLCAnQ1NTJywgJ1R5cGVTY3JpcHQnLCAnSmF2YScsICdSdXN0J107XHJcbmNvbnN0IFNPUlRfVFlQRVMgPSBbXHJcbiAgeyBuYW1lOiAnQmVzdCBNYXRjaCcgfSxcclxuICB7IG5hbWU6ICdNb3N0IFN0YXJzJywgdmFsdWU6ICdzdGFycycsIG9yZGVyOiAnZHNjJyB9LFxyXG4gIHsgbmFtZTogJ0Zld2VzdCBTdGFycycsIHZhbHVlOiAnc3RhcnMnLCBvcmRlcjogJ2FzYycgfSxcclxuICB7IG5hbWU6ICdNb3N0IEZvcmtzJywgdmFsdWU6ICdmb3JrcycsIG9yZGVyOiAnZHNjJyB9LFxyXG4gIHsgbmFtZTogJ0Zld2VzdCBGb3JrcycsIHZhbHVlOiAnZm9ya3MnLCBvcmRlcjogJ2FzYycgfSxcclxuXTtcclxuY29uc3Qgc2VsZWN0ZWRJdGVtU3R5bGUgPSB7XHJcbiAgYm9yZGVyTGVmdDogJzJweCBzb2xpZCAjNjczOWI2JyxcclxuICBmb250V2VpZ2h0OiAxMDAsXHJcbn07XHJcblxyXG5pbnRlcmZhY2UgSXRlbSB7XHJcbiAgbmFtZTogc3RyaW5nO1xyXG4gIHZhbHVlOiBzdHJpbmc7XHJcbiAgb3JkZXI6IHN0cmluZztcclxufVxyXG5cclxuaW50ZXJmYWNlIFMge1xyXG4gIGhvbWU/OiB7XHJcbiAgICBzZWFyY2hfcmVwbzogYW55O1xyXG4gIH07XHJcbn1cclxuXHJcbmNvbnN0IFNlYXJjaCA9ICh7IHJvdXRlciB9KSA9PiB7XHJcbiAgY29uc3QgeyBxdWVyeSB9ID0gcm91dGVyO1xyXG5cclxuICBjb25zdCB0b3RhbF9jb3VudCA9IHVzZVNlbGVjdG9yKFxyXG4gICAgKHN0YXRlOiBTKSA9PiBzdGF0ZS5ob21lLnNlYXJjaF9yZXBvLnRvdGFsX2NvdW50XHJcbiAgKTtcclxuICBsZXQgaXRlbXMgPSB1c2VTZWxlY3Rvcigoc3RhdGU6IFMpID0+IHN0YXRlLmhvbWUuc2VhcmNoX3JlcG8uaXRlbXMpO1xyXG4gIGNvbnNvbGUubG9nKGl0ZW1zKTtcclxuICBpZiAoIWl0ZW1zKSBpdGVtcyA9IFtdO1xyXG4gIC8vIHVzZU1vbW8g5Lyg5Y+C5aSx6LSl77yf77yf77yfXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwicm9vdFwiPlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1lbnVcIj5cclxuICAgICAgICA8Um93IGd1dHRlcj17MjB9PlxyXG4gICAgICAgICAgPENvbCBzcGFuPXs2fT5cclxuICAgICAgICAgICAgPExpc3RcclxuICAgICAgICAgICAgICBib3JkZXJlZFxyXG4gICAgICAgICAgICAgIGhlYWRlcj17PHNwYW4gY2xhc3NOYW1lPVwibGlzdC1oZWFkZXJcIj7or63oqIA8L3NwYW4+fVxyXG4gICAgICAgICAgICAgIHN0eWxlPXt7IG1hcmdpbkJvdHRvbTogMjAgfX1cclxuICAgICAgICAgICAgICBkYXRhU291cmNlPXtMQU5HVUFHRVN9XHJcbiAgICAgICAgICAgICAgcmVuZGVySXRlbT17KGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgICAgIGxldCBzZWxlY3RlZCA9IGl0ZW0gPT09IHF1ZXJ5Lmxhbmc7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICAgICAgICA8TGlzdC5JdGVtIHN0eWxlPXtzZWxlY3RlZCA/IHNlbGVjdGVkSXRlbVN0eWxlIDogbnVsbH0+XHJcbiAgICAgICAgICAgICAgICAgICAge3NlbGVjdGVkID8gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgPHNwYW4+e2l0ZW19PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPXtnZXRMYW5ndWFnZUxpbmsoaXRlbSwgcXVlcnkpfT57aXRlbX08L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgICAgICAgPC9MaXN0Lkl0ZW0+XHJcbiAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8L0NvbD5cclxuICAgICAgICA8L1Jvdz5cclxuICAgICAgICA8Um93IGd1dHRlcj17MjB9PlxyXG4gICAgICAgICAgPENvbCBzcGFuPXs2fT5cclxuICAgICAgICAgICAgPExpc3RcclxuICAgICAgICAgICAgICBib3JkZXJlZFxyXG4gICAgICAgICAgICAgIGhlYWRlcj17PHNwYW4gY2xhc3NOYW1lPVwibGlzdC1oZWFkZXJcIj7mjpLluo88L3NwYW4+fVxyXG4gICAgICAgICAgICAgIGRhdGFTb3VyY2U9e1NPUlRfVFlQRVN9XHJcbiAgICAgICAgICAgICAgcmVuZGVySXRlbT17KGl0ZW06IEl0ZW0pID0+IHtcclxuICAgICAgICAgICAgICAgIGxldCBzZWxlY3RlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgaWYgKGl0ZW0ubmFtZSA9PT0gJ0Jlc3QgTWF0Y2gnICYmICFxdWVyeS5zb3J0KSB7XHJcbiAgICAgICAgICAgICAgICAgIHNlbGVjdGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoXHJcbiAgICAgICAgICAgICAgICAgIGl0ZW0udmFsdWUgPT09IHF1ZXJ5LnNvcnQgJiZcclxuICAgICAgICAgICAgICAgICAgaXRlbS5vcmRlciA9PT0gcXVlcnkub3JkZXJcclxuICAgICAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgICAgICBzZWxlY3RlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICAgICAgICA8TGlzdC5JdGVtIHN0eWxlPXtzZWxlY3RlZCA/IHNlbGVjdGVkSXRlbVN0eWxlIDogbnVsbH0+XHJcbiAgICAgICAgICAgICAgICAgICAge3NlbGVjdGVkID8gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgPHNwYW4+e2l0ZW0ubmFtZX08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgKSA6IChcclxuICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9e2dldFNvcnRUeXBlc0xpbmsoaXRlbSwgcXVlcnkpfT57aXRlbS5uYW1lfTwvYT5cclxuICAgICAgICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgICAgICA8L0xpc3QuSXRlbT5cclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgIDwvQ29sPlxyXG4gICAgICAgICAgPENvbCBzcGFuPXsxOH0+XHJcbiAgICAgICAgICAgIDxoMyBjbGFzc05hbWU9XCJyZXBvcy10aXRsZVwiPnt0b3RhbF9jb3VudH0g5Liq5LuT5bqTPC9oMz5cclxuICAgICAgICAgICAge2l0ZW1zLm1hcCgoaXRlbTogYW55KSA9PiAoXHJcbiAgICAgICAgICAgICAgPFJlcG8gcmVwbz17aXRlbX0ga2V5PXtpdGVtLmlkfT48L1JlcG8+XHJcbiAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgPC9Db2w+XHJcbiAgICAgICAgPC9Sb3c+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgLnJvb3Qge1xyXG4gICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgICAgICAubWVudSB7XHJcbiAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICBvdmVyZmxvdy14OiBoaWRkZW47XHJcbiAgICAgICAgICBvdmVyZmxvdy15OiBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgICAgYH08L3N0eWxlPlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufTtcclxuXHJcblNlYXJjaC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoeyBjdHggfSkgPT4ge1xyXG4gIC8vIGBodHRwczovL2FwaS5naXRodWIuY29tL3NlYXJjaC9yZXBvc2l0b3JpZXM/cT0ke25hbWV9YFxyXG4gIGNvbnN0IHsgc3RvcmUgfSA9IGN0eDtcclxuICBjb25zdCBzZWFyY2hSZXBvZGF0YSA9IGF3YWl0IGdldEFwaURhdGEoY3R4LCAnL2FwaS9zZWFyY2gnKTtcclxuICBzdG9yZS5kaXNwYXRjaChhY3Rpb25zLmdldFNlYXJjaFJlcG9zKHNlYXJjaFJlcG9kYXRhKSk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB3aXRoUm91dGVyKFNlYXJjaCk7XHJcbiJdfQ== */\\n/*@ sourceURL=D:\\\\\\\\360Downloads\\\\\\\\Vscode\\\\\\\\program\\\\\\\\Next-Github-App\\\\\\\\pages\\\\\\\\search.tsx */\"));\n};\n\nSearch.getInitialProps = async ({\n  ctx\n}) => {\n  // `https://api.github.com/search/repositories?q=${name}`\n  const {\n    store\n  } = ctx;\n  const searchRepodata = await getApiData(ctx, '/api/search');\n  store.dispatch(actions.getSearchRepos(searchRepodata));\n};\n\nexport default withRouter(Search);","map":{"version":3,"sources":["D:/360Downloads/Vscode/program/Next-Github-App/pages/search.tsx"],"names":["withRouter","useSelector","getApiData","actions","getLanguageLink","getSortTypesLink","Repo","LANGUAGES","SORT_TYPES","name","value","order","selectedItemStyle","borderLeft","fontWeight","Search","router","query","total_count","state","home","search_repo","items","console","log","marginBottom","item","selected","lang","sort","map","id","getInitialProps","ctx","store","searchRepodata","dispatch","getSearchRepos"],"mappings":"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","sourcesContent":["import { withRouter } from 'next/router';\r\nimport { Row, Col, List } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { getApiData } from '../server/utils.js';\r\nimport * as actions from '../actions';\r\nimport { getLanguageLink, getSortTypesLink } from '../utils';\r\nimport Repo from '../components/Repo';\r\n\r\nconst LANGUAGES = ['JavaScript', 'HTML', 'CSS', 'TypeScript', 'Java', 'Rust'];\r\nconst SORT_TYPES = [\r\n  { name: 'Best Match' },\r\n  { name: 'Most Stars', value: 'stars', order: 'dsc' },\r\n  { name: 'Fewest Stars', value: 'stars', order: 'asc' },\r\n  { name: 'Most Forks', value: 'forks', order: 'dsc' },\r\n  { name: 'Fewest Forks', value: 'forks', order: 'asc' },\r\n];\r\nconst selectedItemStyle = {\r\n  borderLeft: '2px solid #6739b6',\r\n  fontWeight: 100,\r\n};\r\n\r\ninterface Item {\r\n  name: string;\r\n  value: string;\r\n  order: string;\r\n}\r\n\r\ninterface S {\r\n  home?: {\r\n    search_repo: any;\r\n  };\r\n}\r\n\r\nconst Search = ({ router }) => {\r\n  const { query } = router;\r\n\r\n  const total_count = useSelector(\r\n    (state: S) => state.home.search_repo.total_count\r\n  );\r\n  let items = useSelector((state: S) => state.home.search_repo.items);\r\n  console.log(items);\r\n  if (!items) items = [];\r\n  // useMomo 传参失败？？？\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"menu\">\r\n        <Row gutter={20}>\r\n          <Col span={6}>\r\n            <List\r\n              bordered\r\n              header={<span className=\"list-header\">语言</span>}\r\n              style={{ marginBottom: 20 }}\r\n              dataSource={LANGUAGES}\r\n              renderItem={(item) => {\r\n                let selected = item === query.lang;\r\n                return (\r\n                  <List.Item style={selected ? selectedItemStyle : null}>\r\n                    {selected ? (\r\n                      <span>{item}</span>\r\n                    ) : (\r\n                      <a href={getLanguageLink(item, query)}>{item}</a>\r\n                    )}\r\n                  </List.Item>\r\n                );\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={20}>\r\n          <Col span={6}>\r\n            <List\r\n              bordered\r\n              header={<span className=\"list-header\">排序</span>}\r\n              dataSource={SORT_TYPES}\r\n              renderItem={(item: Item) => {\r\n                let selected = false;\r\n                if (item.name === 'Best Match' && !query.sort) {\r\n                  selected = true;\r\n                } else if (\r\n                  item.value === query.sort &&\r\n                  item.order === query.order\r\n                ) {\r\n                  selected = true;\r\n                }\r\n                return (\r\n                  <List.Item style={selected ? selectedItemStyle : null}>\r\n                    {selected ? (\r\n                      <span>{item.name}</span>\r\n                    ) : (\r\n                      <a href={getSortTypesLink(item, query)}>{item.name}</a>\r\n                    )}\r\n                  </List.Item>\r\n                );\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col span={18}>\r\n            <h3 className=\"repos-title\">{total_count} 个仓库</h3>\r\n            {items.map((item: any) => (\r\n              <Repo repo={item} key={item.id}></Repo>\r\n            ))}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <style jsx>{`\r\n        .root {\r\n          height: 100%;\r\n        }\r\n        .menu {\r\n          height: 100%;\r\n          overflow-x: hidden;\r\n          overflow-y: auto;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.getInitialProps = async ({ ctx }) => {\r\n  // `https://api.github.com/search/repositories?q=${name}`\r\n  const { store } = ctx;\r\n  const searchRepodata = await getApiData(ctx, '/api/search');\r\n  store.dispatch(actions.getSearchRepos(searchRepodata));\r\n};\r\n\r\nexport default withRouter(Search);\r\n"]},"metadata":{},"sourceType":"module"}