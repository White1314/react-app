{"ast":null,"code":"const axios = require('axios');\n\nconst atob = require('atob');\n\nglobal.atob = atob;\nconst BASE_URL = 'https://api.github.com';\n\nconst getApiData = async (ctx, url) => {\n  // 判断当前为请求环境为服务端还是客户端（网页刷新和链接跳转）\n  let isServer = true; // 客户端请求没有 session (ctx.req.session)，需代理到服务器上\n\n  if (!isServer) {\n    // 转发到客户端\n    url = `/api${url}`;\n    const result = await axios({\n      url\n    });\n    let data = result.data ? result.data.data : [];\n    console.log(result.data);\n    return data;\n  } else {\n    url = `${BASE_URL}${url}`; // 服务端可直接获取 session\n\n    const {\n      oauth\n    } = ctx.session || '';\n    const {\n      token_type,\n      access_token\n    } = oauth ? oauth : {};\n    let headers = oauth ? {\n      Authorization: `${token_type} ${access_token}`\n    } : {};\n    const result = await axios({\n      url,\n      method: 'get',\n      headers\n    }).catch(err => {});\n    console.log('服务端获取数据成功');\n    let data = result ? result.data : [];\n    return data;\n  }\n};\n\nmodule.exports = {\n  getApiData\n};","map":{"version":3,"sources":["D:/360Downloads/Vscode/program/Next-Github-App/server/utils.js"],"names":["axios","require","atob","global","BASE_URL","getApiData","ctx","url","isServer","result","data","console","log","oauth","session","token_type","access_token","headers","Authorization","method","catch","err","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEAE,MAAM,CAACD,IAAP,GAAcA,IAAd;AAEA,MAAME,QAAQ,GAAG,wBAAjB;;AAEA,MAAMC,UAAU,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACrC;AACA,MAAIC,QAAQ,OAAZ,CAFqC,CAIrC;;AACA,MAAI,CAACA,QAAL,EAAe;AACb;AACAD,IAAAA,GAAG,GAAI,OAAMA,GAAI,EAAjB;AACA,UAAME,MAAM,GAAG,MAAMT,KAAK,CAAC;AAAEO,MAAAA;AAAF,KAAD,CAA1B;AACA,QAAIG,IAAI,GAAGD,MAAM,CAACC,IAAP,GAAcD,MAAM,CAACC,IAAP,CAAYA,IAA1B,GAAiC,EAA5C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACC,IAAnB;AACA,WAAOA,IAAP;AACD,GAPD,MAOO;AACLH,IAAAA,GAAG,GAAI,GAAEH,QAAS,GAAEG,GAAI,EAAxB,CADK,CAEL;;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAYP,GAAG,CAACQ,OAAJ,IAAe,EAAjC;AACA,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA+BH,KAAK,GAAGA,KAAH,GAAW,EAArD;AACA,QAAII,OAAO,GAAGJ,KAAK,GACf;AACEK,MAAAA,aAAa,EAAG,GAAEH,UAAW,IAAGC,YAAa;AAD/C,KADe,GAIf,EAJJ;AAKA,UAAMP,MAAM,GAAG,MAAMT,KAAK,CAAC;AACzBO,MAAAA,GADyB;AAEzBY,MAAAA,MAAM,EAAE,KAFiB;AAGzBF,MAAAA;AAHyB,KAAD,CAAL,CAIlBG,KAJkB,CAIXC,GAAD,IAAS,CAAE,CAJC,CAArB;AAKAV,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,QAAIF,IAAI,GAAGD,MAAM,GAAGA,MAAM,CAACC,IAAV,GAAiB,EAAlC;AACA,WAAOA,IAAP;AACD;AACF,CA/BD;;AAiCAY,MAAM,CAACC,OAAP,GAAiB;AACflB,EAAAA;AADe,CAAjB","sourcesContent":["const axios = require('axios');\r\nconst atob = require('atob');\r\n\r\nglobal.atob = atob;\r\n\r\nconst BASE_URL = 'https://api.github.com';\r\n\r\nconst getApiData = async (ctx, url) => {\r\n  // 判断当前为请求环境为服务端还是客户端（网页刷新和链接跳转）\r\n  let isServer = typeof window === 'undefined';\r\n\r\n  // 客户端请求没有 session (ctx.req.session)，需代理到服务器上\r\n  if (!isServer) {\r\n    // 转发到客户端\r\n    url = `/api${url}`;\r\n    const result = await axios({ url });\r\n    let data = result.data ? result.data.data : [];\r\n    console.log(result.data);\r\n    return data;\r\n  } else {\r\n    url = `${BASE_URL}${url}`;\r\n    // 服务端可直接获取 session\r\n    const { oauth } = ctx.session || '';\r\n    const { token_type, access_token } = oauth ? oauth : {};\r\n    let headers = oauth\r\n      ? {\r\n          Authorization: `${token_type} ${access_token}`,\r\n        }\r\n      : {};\r\n    const result = await axios({\r\n      url,\r\n      method: 'get',\r\n      headers,\r\n    }).catch((err) => {});\r\n    console.log('服务端获取数据成功');\r\n    let data = result ? result.data : [];\r\n    return data;\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  getApiData,\r\n};\r\n"]},"metadata":{},"sourceType":"script"}