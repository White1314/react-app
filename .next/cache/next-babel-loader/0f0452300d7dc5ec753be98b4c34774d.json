{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useSelector } from 'react-redux'; //import Link from 'next/link';\n\nimport { MailOutlined } from '@ant-design/icons';\n//import post from '../axios';\n//import { getApiData } from '../server/utils.js';\nimport { OAUTH_URL } from '../config.js';\n\nconst Index = ({}) => {\n  const {\n    id,\n    avatar_url,\n    login,\n    name,\n    bio,\n    mail\n  } = useSelector(state => state.user);\n  return __jsx(React.Fragment, null, !id ? __jsx(\"div\", {\n    className: \"jsx-2519291718\" + \" \" + \"root\"\n  }, __jsx(_Button, {\n    type: \"primary\",\n    href: OAUTH_URL\n  }, \"\\u70B9\\u51FB\\u767B\\u5F55\")) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-2519291718\" + \" \" + \"user-info\"\n  }, __jsx(\"img\", {\n    src: avatar_url,\n    alt: \"\",\n    className: \"jsx-2519291718\" + \" \" + \"avatar\"\n  }), __jsx(\"span\", {\n    className: \"jsx-2519291718\" + \" \" + \"login\"\n  }, login), __jsx(\"span\", {\n    className: \"jsx-2519291718\" + \" \" + \"name\"\n  }, name), __jsx(\"span\", {\n    className: \"jsx-2519291718\" + \" \" + \"bio\"\n  }, bio), __jsx(\"p\", {\n    className: \"jsx-2519291718\" + \" \" + \"mail\"\n  }, __jsx(MailOutlined, {\n    style: {\n      marginRight: 10\n    }\n  }), __jsx(\"a\", {\n    href: `mailto:${mail}`,\n    className: \"jsx-2519291718\"\n  }, mail))), __jsx(\"div\", {\n    className: \"jsx-2519291718\" + \" \" + \"user-repo\"\n  }, \"user-repo\")), __jsx(_JSXStyle, {\n    id: \"2519291718\"\n  }, \".root.jsx-2519291718{width:100%;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.user-info.jsx-2519291718{width:200px;margin-right:40px;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.avatar.jsx-2519291718{width:100%;border-radius:5px;}.login.jsx-2519291718{font-weight:800;font-size:20px;margin-top:20px;}.name.jsx-2519291718{font-size:16px;color:#777;}.bio.jsx-2519291718{margin-top:20px;color:#333;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFwzNjBEb3dubG9hZHNcXFZzY29kZVxccHJvZ3JhbVxcTmV4dC1HaXRodWItQXBwXFxwYWdlc1xcaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlEUyxBQUd3QixBQU9DLEFBT0QsQUFJSyxBQUtELEFBSUMsV0ExQkosQUFjTSxDQVBBLEdBZ0JQLENBTEksQUFTSixPQTFCRSxHQXVCZixDQUlBLEVBYkEsQ0FQZ0IsQ0FXRSxnQkFDbEIsdUNBWGUsV0FQVSwrREFRRCxvQ0FQSCwwQ0FRckIsbURBUEEiLCJmaWxlIjoiRDpcXDM2MERvd25sb2Fkc1xcVnNjb2RlXFxwcm9ncmFtXFxOZXh0LUdpdGh1Yi1BcHBcXHBhZ2VzXFxpbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuLy9pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xyXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICdhbnRkJztcclxuaW1wb3J0IHsgTWFpbE91dGxpbmVkIH0gZnJvbSAnQGFudC1kZXNpZ24vaWNvbnMnO1xyXG5cclxuaW1wb3J0ICogYXMgYWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zJztcclxuLy9pbXBvcnQgcG9zdCBmcm9tICcuLi9heGlvcyc7XHJcbi8vaW1wb3J0IHsgZ2V0QXBpRGF0YSB9IGZyb20gJy4uL3NlcnZlci91dGlscy5qcyc7XHJcbmltcG9ydCB7IE9BVVRIX1VSTCB9IGZyb20gJy4uL2NvbmZpZy5qcyc7XHJcblxyXG5pbnRlcmZhY2UgUyB7XHJcbiAgdXNlcjoge1xyXG4gICAgaWQ6IG51bWJlcjtcclxuICAgIGF2YXRhcl91cmw6IHN0cmluZztcclxuICAgIGxvZ2luOiBzdHJpbmc7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICBiaW86IHN0cmluZztcclxuICAgIG1haWw6IHN0cmluZztcclxuICB9O1xyXG59XHJcblxyXG5jb25zdCBJbmRleCA9ICh7fSkgPT4ge1xyXG4gIGNvbnN0IHsgaWQsIGF2YXRhcl91cmwsIGxvZ2luLCBuYW1lLCBiaW8sIG1haWwgfSA9IHVzZVNlbGVjdG9yKFxyXG4gICAgKHN0YXRlOiBTKSA9PiBzdGF0ZS51c2VyXHJcbiAgKTtcclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgeyFpZCA/IChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvb3RcIj5cclxuICAgICAgICAgIDxCdXR0b24gdHlwZT1cInByaW1hcnlcIiBocmVmPXtPQVVUSF9VUkx9PlxyXG4gICAgICAgICAgICDngrnlh7vnmbvlvZVcclxuICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICApIDogKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInVzZXItaW5mb1wiPlxyXG4gICAgICAgICAgICA8aW1nIHNyYz17YXZhdGFyX3VybH0gYWx0PVwiXCIgY2xhc3NOYW1lPVwiYXZhdGFyXCIgLz5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibG9naW5cIj57bG9naW59PC9zcGFuPlxyXG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuYW1lXCI+e25hbWV9PC9zcGFuPlxyXG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJiaW9cIj57YmlvfTwvc3Bhbj5cclxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwibWFpbFwiPlxyXG4gICAgICAgICAgICAgIDxNYWlsT3V0bGluZWQgc3R5bGU9e3sgbWFyZ2luUmlnaHQ6IDEwIH19IC8+XHJcbiAgICAgICAgICAgICAgPGEgaHJlZj17YG1haWx0bzoke21haWx9YH0+e21haWx9PC9hPlxyXG4gICAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidXNlci1yZXBvXCI+dXNlci1yZXBvPC9kaXY+XHJcbiAgICAgICAgPC8+XHJcbiAgICAgICl9XHJcbiAgICAgIDxzdHlsZSBqc3g+XHJcbiAgICAgICAge2BcclxuICAgICAgICAgIC5yb290IHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAudXNlci1pbmZvIHtcclxuICAgICAgICAgICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDQwcHg7XHJcbiAgICAgICAgICAgIGZsZXgtc2hyaW5rOiAwO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLmF2YXRhciB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAubG9naW4ge1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogODAwO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAubmFtZSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgY29sb3I6ICM3Nzc7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAuYmlvIHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgICAgICAgICAgY29sb3I6ICMzMzM7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgYH1cclxuICAgICAgPC9zdHlsZT5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5JbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoeyBjdHggfSkgPT4ge1xyXG4gIC8vIOivt+axgiBnaXRodWIg5pWw5o2u77yM5Zug5Li65LiN6IO95pq06ZyyIHRva2Vu77yM5bCG6K+35rGC5Luj55CG5Yiw5pyN5Yqh5ZmoXHJcbiAgLy8g5pyN5Yqh5Zmo5riy5p+T6buY6K6k56uv5Y+j5Li6IDgwXHJcbiAgY29uc3QgeyBzdG9yZSB9ID0gY3R4O1xyXG4gIC8qXHJcbiAgY29uc3QgcmVwb0RhdGEgPSBhd2FpdCBnZXRBcGlEYXRhKGN0eCwgJy9hcGkvcmVwb3NpdG9yeScpO1xyXG4gIHN0b3JlLmRpc3BhdGNoKGFjdGlvbnMuZ2V0R2l0aHViUmVwb3NpdG9yeShyZXBvRGF0YSkpO1xyXG4gICovXHJcbiAgLyogIOafpeeci+eUqOaIt+S7k+W6k+S/oeaBr+mcgOWFiOeZu+W9lVxyXG4gIGNvbnN0IGlkID0gc3RvcmUuZ2V0U3RhdGUoKS51c2VyLmlkO1xyXG4gIGlmKCFpZCkge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICAqL1xyXG4gIC8vY29uc3QgdXNlclJlcG9EYXRhID0gYXdhaXQgZ2V0QXBpRGF0YShjdHgsICcvYXBpL3VzZXIvcmVwb3MnKTtcclxuICAvL3N0b3JlLmRpc3BhdGNoKGFjdGlvbnMuZ2V0VXNlclJlcG9zKHVzZXJSZXBvRGF0YSkpO1xyXG4gIC8vY29uc3QgdXNlclN0YXJyZWRSZXBvRGF0YSA9IGF3YWl0IGdldEFwaURhdGEoY3R4LCAnL2FwaS91c2VyL3N0YXJyZWQnKTtcclxuICAvL3N0b3JlLmRpc3BhdGNoKGFjdGlvbnMuZ2V0VXNlclJlcG9zKHVzZXJTdGFycmVkUmVwb0RhdGEpKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEluZGV4O1xyXG4iXX0= */\\n/*@ sourceURL=D:\\\\\\\\360Downloads\\\\\\\\Vscode\\\\\\\\program\\\\\\\\Next-Github-App\\\\\\\\pages\\\\\\\\index.tsx */\"));\n};\n\nIndex.getInitialProps = async ({\n  ctx\n}) => {\n  // 请求 github 数据，因为不能暴露 token，将请求代理到服务器\n  // 服务器渲染默认端口为 80\n  const {\n    store\n  } = ctx;\n  /*\r\n  const repoData = await getApiData(ctx, '/api/repository');\r\n  store.dispatch(actions.getGithubRepository(repoData));\r\n  */\n\n  /*  查看用户仓库信息需先登录\r\n  const id = store.getState().user.id;\r\n  if(!id) {\r\n    return;\r\n  }\r\n  */\n  //const userRepoData = await getApiData(ctx, '/api/user/repos');\n  //store.dispatch(actions.getUserRepos(userRepoData));\n  //const userStarredRepoData = await getApiData(ctx, '/api/user/starred');\n  //store.dispatch(actions.getUserRepos(userStarredRepoData));\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/360Downloads/Vscode/program/Next-Github-App/pages/index.tsx"],"names":["useSelector","MailOutlined","OAUTH_URL","Index","id","avatar_url","login","name","bio","mail","state","user","marginRight","getInitialProps","ctx","store"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,aAA5B,C,CACA;;AAEA,SAASC,YAAT,QAA6B,mBAA7B;AAGA;AACA;AACA,SAASC,SAAT,QAA0B,cAA1B;;AAaA,MAAMC,KAAK,GAAG,CAAC,EAAD,KAAQ;AACpB,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,UAAN;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,IAAzB;AAA+BC,IAAAA,GAA/B;AAAoCC,IAAAA;AAApC,MAA6CT,WAAW,CAC3DU,KAAD,IAAcA,KAAK,CAACC,IADwC,CAA9D;AAGA,SACE,4BACG,CAACP,EAAD,GACC;AAAA,wCAAe;AAAf,KACE;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,IAAI,EAAEF;AAA7B,gCADF,CADD,GAOC,4BACE;AAAA,wCAAe;AAAf,KACE;AAAK,IAAA,GAAG,EAAEG,UAAV;AAAsB,IAAA,GAAG,EAAC,EAA1B;AAAA,wCAAuC;AAAvC,IADF,EAEE;AAAA,wCAAgB;AAAhB,KAAyBC,KAAzB,CAFF,EAGE;AAAA,wCAAgB;AAAhB,KAAwBC,IAAxB,CAHF,EAIE;AAAA,wCAAgB;AAAhB,KAAuBC,GAAvB,CAJF,EAKE;AAAA,wCAAa;AAAb,KACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEI,MAAAA,WAAW,EAAE;AAAf;AAArB,IADF,EAEE;AAAG,IAAA,IAAI,EAAG,UAASH,IAAK,EAAxB;AAAA;AAAA,KAA4BA,IAA5B,CAFF,CALF,CADF,EAWE;AAAA,wCAAe;AAAf,iBAXF,CARJ;AAAA;AAAA,gjLADF;AA4DD,CAhED;;AAkEAN,KAAK,CAACU,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACzC;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYD,GAAlB;AACA;;;;;AAIA;;;;;;AAMA;AACA;AACA;AACA;AACD,CAlBD;;AAoBA,eAAeX,KAAf","sourcesContent":["import { useSelector } from 'react-redux';\r\n//import Link from 'next/link';\r\nimport { Button } from 'antd';\r\nimport { MailOutlined } from '@ant-design/icons';\r\n\r\nimport * as actions from '../actions';\r\n//import post from '../axios';\r\n//import { getApiData } from '../server/utils.js';\r\nimport { OAUTH_URL } from '../config.js';\r\n\r\ninterface S {\r\n  user: {\r\n    id: number;\r\n    avatar_url: string;\r\n    login: string;\r\n    name: string;\r\n    bio: string;\r\n    mail: string;\r\n  };\r\n}\r\n\r\nconst Index = ({}) => {\r\n  const { id, avatar_url, login, name, bio, mail } = useSelector(\r\n    (state: S) => state.user\r\n  );\r\n  return (\r\n    <>\r\n      {!id ? (\r\n        <div className=\"root\">\r\n          <Button type=\"primary\" href={OAUTH_URL}>\r\n            点击登录\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"user-info\">\r\n            <img src={avatar_url} alt=\"\" className=\"avatar\" />\r\n            <span className=\"login\">{login}</span>\r\n            <span className=\"name\">{name}</span>\r\n            <span className=\"bio\">{bio}</span>\r\n            <p className=\"mail\">\r\n              <MailOutlined style={{ marginRight: 10 }} />\r\n              <a href={`mailto:${mail}`}>{mail}</a>\r\n            </p>\r\n          </div>\r\n          <div className=\"user-repo\">user-repo</div>\r\n        </>\r\n      )}\r\n      <style jsx>\r\n        {`\r\n          .root {\r\n            width: 100%;\r\n            height: 100%;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n          }\r\n          .user-info {\r\n            width: 200px;\r\n            margin-right: 40px;\r\n            flex-shrink: 0;\r\n            display: flex;\r\n            flex-direction: column;\r\n          }\r\n          .avatar {\r\n            width: 100%;\r\n            border-radius: 5px;\r\n          }\r\n          .login {\r\n            font-weight: 800;\r\n            font-size: 20px;\r\n            margin-top: 20px;\r\n          }\r\n          .name {\r\n            font-size: 16px;\r\n            color: #777;\r\n          }\r\n          .bio {\r\n            margin-top: 20px;\r\n            color: #333;\r\n          }\r\n        `}\r\n      </style>\r\n    </>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async ({ ctx }) => {\r\n  // 请求 github 数据，因为不能暴露 token，将请求代理到服务器\r\n  // 服务器渲染默认端口为 80\r\n  const { store } = ctx;\r\n  /*\r\n  const repoData = await getApiData(ctx, '/api/repository');\r\n  store.dispatch(actions.getGithubRepository(repoData));\r\n  */\r\n  /*  查看用户仓库信息需先登录\r\n  const id = store.getState().user.id;\r\n  if(!id) {\r\n    return;\r\n  }\r\n  */\r\n  //const userRepoData = await getApiData(ctx, '/api/user/repos');\r\n  //store.dispatch(actions.getUserRepos(userRepoData));\r\n  //const userStarredRepoData = await getApiData(ctx, '/api/user/starred');\r\n  //store.dispatch(actions.getUserRepos(userStarredRepoData));\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}