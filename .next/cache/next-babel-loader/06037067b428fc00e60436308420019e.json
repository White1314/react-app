{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useSelector } from 'react-redux'; //import Link from 'next/link';\n\nconst Index = ({}) => {\n  const {\n    id\n  } = useSelector(state => state.user);\n  return __jsx(React.Fragment, null, !id ? __jsx(\"div\", {\n    className: \"jsx-1003094928\" + \" \" + \"noLoginBtn\"\n  }, __jsx(_Button, {\n    type: \"primary\"\n  }, \"\\u70B9\\u51FB\\u767B\\u5F55\")) : __jsx(\"div\", {\n    className: \"jsx-1003094928\"\n  }, \"index\"), __jsx(_JSXStyle, {\n    id: \"1003094928\"\n  }, \".noLoginBtn.jsx-1003094928{margin:auto;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFwzNjBEb3dubG9hZHNcXFZzY29kZVxccHJvZ3JhbVxcTmV4dC1HaXRodWItQXBwXFxwYWdlc1xcaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdCUyxBQUd5QixZQUNkIiwiZmlsZSI6IkQ6XFwzNjBEb3dubG9hZHNcXFZzY29kZVxccHJvZ3JhbVxcTmV4dC1HaXRodWItQXBwXFxwYWdlc1xcaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tICdyZWFjdC1yZWR1eCc7XHJcbi8vaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcclxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnYW50ZCc7XHJcblxyXG5pbXBvcnQgKiBhcyBhY3Rpb25zIGZyb20gJy4uL2FjdGlvbnMnO1xyXG4vL2ltcG9ydCBwb3N0IGZyb20gJy4uL2F4aW9zJztcclxuLy9pbXBvcnQgeyBnZXRBcGlEYXRhIH0gZnJvbSAnLi4vc2VydmVyL3V0aWxzLmpzJztcclxuXHJcbmludGVyZmFjZSBTIHtcclxuICB1c2VyOiB7IGlkPzogbnVtYmVyIH07XHJcbn1cclxuXHJcbmNvbnN0IEluZGV4ID0gKHt9KSA9PiB7XHJcbiAgY29uc3QgeyBpZCB9ID0gdXNlU2VsZWN0b3IoKHN0YXRlOiBTKSA9PiBzdGF0ZS51c2VyKTtcclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgeyFpZCA/IChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5vTG9naW5CdG5cIj5cclxuICAgICAgICAgIDxCdXR0b24gdHlwZT1cInByaW1hcnlcIj7ngrnlh7vnmbvlvZU8L0J1dHRvbj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgKSA6IChcclxuICAgICAgICA8ZGl2PmluZGV4PC9kaXY+XHJcbiAgICAgICl9XHJcbiAgICAgIDxzdHlsZSBqc3g+XHJcbiAgICAgICAge2BcclxuICAgICAgICAgIC5ub0xvZ2luQnRuIHtcclxuICAgICAgICAgICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIGB9XHJcbiAgICAgIDwvc3R5bGU+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuSW5kZXguZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgKHsgY3R4IH0pID0+IHtcclxuICAvLyDor7fmsYIgZ2l0aHViIOaVsOaNru+8jOWboOS4uuS4jeiDveaatOmcsiB0b2tlbu+8jOWwhuivt+axguS7o+eQhuWIsOacjeWKoeWZqFxyXG4gIC8vIOacjeWKoeWZqOa4suafk+m7mOiupOerr+WPo+S4uiA4MFxyXG4gIGNvbnN0IHsgc3RvcmUgfSA9IGN0eDtcclxuICAvKlxyXG4gIGNvbnN0IHJlcG9EYXRhID0gYXdhaXQgZ2V0QXBpRGF0YShjdHgsICcvYXBpL3JlcG9zaXRvcnknKTtcclxuICBzdG9yZS5kaXNwYXRjaChhY3Rpb25zLmdldEdpdGh1YlJlcG9zaXRvcnkocmVwb0RhdGEpKTtcclxuICAqL1xyXG4gIC8qICDmn6XnnIvnlKjmiLfku5PlupPkv6Hmga/pnIDlhYjnmbvlvZVcclxuICBjb25zdCB1c2VyX2lkID0gc3RvcmUuZ2V0U3RhdGUoKS51c2VyLmlkO1xyXG4gIGlmKCF1c2VyX2lkKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG4gICovXHJcbiAgLy9jb25zdCB1c2VyUmVwb0RhdGEgPSBhd2FpdCBnZXRBcGlEYXRhKGN0eCwgJy9hcGkvdXNlci9yZXBvcycpO1xyXG4gIC8vc3RvcmUuZGlzcGF0Y2goYWN0aW9ucy5nZXRVc2VyUmVwb3ModXNlclJlcG9EYXRhKSk7XHJcbiAgLy9jb25zdCB1c2VyU3RhcnJlZFJlcG9EYXRhID0gYXdhaXQgZ2V0QXBpRGF0YShjdHgsICcvYXBpL3VzZXIvc3RhcnJlZCcpO1xyXG4gIC8vc3RvcmUuZGlzcGF0Y2goYWN0aW9ucy5nZXRVc2VyUmVwb3ModXNlclN0YXJyZWRSZXBvRGF0YSkpO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgSW5kZXg7XHJcbiJdfQ== */\\n/*@ sourceURL=D:\\\\\\\\360Downloads\\\\\\\\Vscode\\\\\\\\program\\\\\\\\Next-Github-App\\\\\\\\pages\\\\\\\\index.tsx */\"));\n};\n\nIndex.getInitialProps = async ({\n  ctx\n}) => {\n  // 请求 github 数据，因为不能暴露 token，将请求代理到服务器\n  // 服务器渲染默认端口为 80\n  const {\n    store\n  } = ctx;\n  /*\r\n  const repoData = await getApiData(ctx, '/api/repository');\r\n  store.dispatch(actions.getGithubRepository(repoData));\r\n  */\n\n  /*  查看用户仓库信息需先登录\r\n  const user_id = store.getState().user.id;\r\n  if(!user_id) {\r\n    return;\r\n  }\r\n  */\n  //const userRepoData = await getApiData(ctx, '/api/user/repos');\n  //store.dispatch(actions.getUserRepos(userRepoData));\n  //const userStarredRepoData = await getApiData(ctx, '/api/user/starred');\n  //store.dispatch(actions.getUserRepos(userStarredRepoData));\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/360Downloads/Vscode/program/Next-Github-App/pages/index.tsx"],"names":["useSelector","Index","id","state","user","getInitialProps","ctx","store"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,aAA5B,C,CACA;;AAWA,MAAMC,KAAK,GAAG,CAAC,EAAD,KAAQ;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAASF,WAAW,CAAEG,KAAD,IAAcA,KAAK,CAACC,IAArB,CAA1B;AACA,SACE,4BACG,CAACF,EAAD,GACC;AAAA,wCAAe;AAAf,KACE;AAAQ,IAAA,IAAI,EAAC;AAAb,gCADF,CADD,GAKC;AAAA;AAAA,aANJ;AAAA;AAAA,ykFADF;AAkBD,CApBD;;AAsBAD,KAAK,CAACI,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACzC;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYD,GAAlB;AACA;;;;;AAIA;;;;;;AAMA;AACA;AACA;AACA;AACD,CAlBD;;AAoBA,eAAeL,KAAf","sourcesContent":["import { useSelector } from 'react-redux';\r\n//import Link from 'next/link';\r\nimport { Button } from 'antd';\r\n\r\nimport * as actions from '../actions';\r\n//import post from '../axios';\r\n//import { getApiData } from '../server/utils.js';\r\n\r\ninterface S {\r\n  user: { id?: number };\r\n}\r\n\r\nconst Index = ({}) => {\r\n  const { id } = useSelector((state: S) => state.user);\r\n  return (\r\n    <>\r\n      {!id ? (\r\n        <div className=\"noLoginBtn\">\r\n          <Button type=\"primary\">点击登录</Button>\r\n        </div>\r\n      ) : (\r\n        <div>index</div>\r\n      )}\r\n      <style jsx>\r\n        {`\r\n          .noLoginBtn {\r\n            margin: auto;\r\n          }\r\n        `}\r\n      </style>\r\n    </>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async ({ ctx }) => {\r\n  // 请求 github 数据，因为不能暴露 token，将请求代理到服务器\r\n  // 服务器渲染默认端口为 80\r\n  const { store } = ctx;\r\n  /*\r\n  const repoData = await getApiData(ctx, '/api/repository');\r\n  store.dispatch(actions.getGithubRepository(repoData));\r\n  */\r\n  /*  查看用户仓库信息需先登录\r\n  const user_id = store.getState().user.id;\r\n  if(!user_id) {\r\n    return;\r\n  }\r\n  */\r\n  //const userRepoData = await getApiData(ctx, '/api/user/repos');\r\n  //store.dispatch(actions.getUserRepos(userRepoData));\r\n  //const userStarredRepoData = await getApiData(ctx, '/api/user/starred');\r\n  //store.dispatch(actions.getUserRepos(userStarredRepoData));\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}