{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.68798a41a2bbe139d181.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import { useSelector } from 'react-redux';\r\n//import Link from 'next/link';\r\nimport { Button, Tabs } from 'antd';\r\nimport { MailOutlined } from '@ant-design/icons';\r\n\r\nimport * as actions from '../actions';\r\n//import post from '../axios';\r\nimport { getApiData } from '../server/utils.js';\r\nimport { OAUTH_URL } from '../config.js';\r\nimport Repo from '../components/Repo';\r\n\r\ninterface userState {\r\n  user: {\r\n    id: number;\r\n    avatar_url: string;\r\n    login: string;\r\n    name: string;\r\n    bio: string;\r\n    email: string;\r\n  };\r\n}\r\n\r\ninterface homeState {\r\n  home: {\r\n    user_repo: any;\r\n    user_starred_repo: any;\r\n  };\r\n}\r\n\r\nconst Index = () => {\r\n  const { id, avatar_url, login, name, bio, email } = useSelector(\r\n    (state: userState) => state.user\r\n  );\r\n  const userRepo = useSelector((state: homeState) => state.home.user_repo);\r\n  const userStarredRepo = useSelector(\r\n    (state: homeState) => state.home.user_starred_repo\r\n  );\r\n  return (\r\n    <>\r\n      {!id ? (\r\n        <div className=\"root\">\r\n          <Button type=\"primary\" href={OAUTH_URL}>\r\n            点击登录\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <div style={{ display: 'flex', height: '100%' }}>\r\n          <div className=\"user-info\">\r\n            <img src={avatar_url} alt=\"\" className=\"avatar\" />\r\n            <span className=\"login\">{login}</span>\r\n            {name ? <span className=\"name\">{name}</span> : null}\r\n            {bio ? <span className=\"bio\">{bio}</span> : null}\r\n            {email ? (\r\n              <p className=\"email\">\r\n                <MailOutlined style={{ marginRight: 10 }} />\r\n                <a href={`mailto:${email}`}>{email}</a>\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"user-repo\">\r\n            {\r\n              <Tabs defaultActiveKey=\"0\" animated={false}>\r\n                <Tabs.TabPane tab=\"你的仓库\" key=\"0\">\r\n                  {userRepo.map((item: any) => (\r\n                    <Repo repo={item} key={item.id} />\r\n                  ))}\r\n                </Tabs.TabPane>\r\n                <Tabs.TabPane tab=\"收藏的仓库\" key=\"1\">\r\n                  {userStarredRepo.map((item: any) => (\r\n                    <Repo repo={item} key={item.id} />\r\n                  ))}\r\n                </Tabs.TabPane>\r\n              </Tabs>\r\n            }\r\n          </div>\r\n        </div>\r\n      )}\r\n      <style jsx>\r\n        {`\r\n          .root {\r\n            width: 100%;\r\n            height: 100%;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n          }\r\n          .user-info {\r\n            width: 200px;\r\n            margin-right: 40px;\r\n            flex-shrink: 0;\r\n            display: flex;\r\n            flex-direction: column;\r\n          }\r\n          .avatar {\r\n            width: 100%;\r\n            border-radius: 5px;\r\n          }\r\n          .login {\r\n            font-weight: 300;\r\n            font-size: 20px;\r\n            margin-top: 20px;\r\n            color: #666;\r\n          }\r\n          .name {\r\n            margin-top: 20px;\r\n            font-size: 16px;\r\n            color: #777;\r\n          }\r\n          .bio {\r\n            margin-top: 20px;\r\n            color: #333;\r\n          }\r\n          .email {\r\n            margin-top: 20px;\r\n          }\r\n          .user-repo {\r\n            width: 100%;\r\n            height: 100%;\r\n            overflow: auto;\r\n          }\r\n        `}\r\n      </style>\r\n    </>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async ({ ctx }) => {\r\n  const { store } = ctx;\r\n\r\n  // 查看用户仓库信息需先登录\r\n  const id = store.getState().user.id;\r\n  if (!id) {\r\n    return;\r\n  }\r\n  // 信息缓存在 redux\r\n  const data = Promise.all([\r\n    await getApiData(ctx, '/user/repos'),\r\n    await getApiData(ctx, '/user/starred'),\r\n  ]);\r\n\r\n  store.dispatch(actions.getUserRepos(data[0]));\r\n  store.dispatch(actions.getUserStarredRepos(data[1]));\r\n};\r\n\r\nexport default Index;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAmBA;AAAA;AAEA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAGA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AA9BA;AAAA;AAsFA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AASA;AAKA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAiBA;;;;A","sourceRoot":""}